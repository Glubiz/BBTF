{"version":3,"file":"static/js/417.b6fc38bc.chunk.js","mappings":"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","sources":["components/Tracker/Output.js","Pages/Tracker.js","components/Shared/ConvertInt.js","components/Table/Table.js","components/Table/TableLink.js","../node_modules/react-minimal-pie-chart/src/utils.ts","../node_modules/react-minimal-pie-chart/src/Chart/extendData.ts","../node_modules/react-minimal-pie-chart/src/Label.tsx","../node_modules/react-minimal-pie-chart/src/Chart/renderLabels.tsx","../node_modules/react-minimal-pie-chart/node_modules/svg-partial-circle/index.js","../node_modules/react-minimal-pie-chart/src/Path.tsx","../node_modules/react-minimal-pie-chart/src/Chart/renderSegments.tsx","../node_modules/react-minimal-pie-chart/src/Chart/Chart.tsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { ConvertInt } from '../Shared/ConvertInt'\n\nimport Text from './../Form/Text'\nimport TableLink from './../Table/TableLink'\nimport Table from './../Table/Table'\nimport Loader from './../UI/Loader'\n\nconst Output = (props) => {\n    const [data, setData] = useState([])\n    const [Stats, setStats] = useState([])\n    const [Index, setIndex] = useState(0)\n    const [Buys, setBuys] = useState([])\n    const [Sells, setSells] = useState([])\n    const [Transfers, setTransfers] = useState([])\n\n    useEffect(() => {\n        console.log(props.Index)\n        console.log(props.Tracker)\n        console.log(props.Tracker[props.Index])\n        setIndex(() => props.Index);\n\n        var Wallet = props.Tracker[props.Index]\n        var Diagram = []\n        //Preparing data for pie chart\n        if(Wallet.BuysAmount > 0){\n            Diagram.push({ title: 'Buys', value: Wallet.BuysAmount, color: 'rgba(3, 213, 192, 0.8)' })\n        }\n        if(Wallet.SellsAmount > 0){\n            Diagram.push({ title: 'Sells', value: Wallet.SellsAmount, color: 'rgba(154, 85, 239, 0.8)' })\n        }\n        if(Wallet.Reflections > 0){\n            Diagram.push({ title: 'Reflections', value: Wallet.Reflections, color: 'rgba(238, 80, 169, 0.8)' })\n        }\n        console.log(Diagram)\n        setData(() => Diagram)\n\n        //Preparing data for Stats Table \n        var temp = [\n            {Data : [<h2 className=\"table__data__header\">Txn Count</h2>]},\n            {Data: ['Txn In', Wallet.Buys.toString()]},\n            {Data: ['Txn Out', Wallet.Sells.toString()]},\n            {Data : [<h2 className=\"table__data__header\">Stats</h2>]},\n            {Data: ['Balance', Wallet.Balance.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + ' SFM']},\n            {Data: ['Value', Wallet.Value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")]},\n            {Data: ['Market Share', Wallet.MarketShare.toString() + \"%\"]},\n            {Data: ['Position', Wallet.Position.toString()]},\n            {Data : [<h2 className=\"table__data__header\">Reflections</h2>]},\n            {Data: ['Reflections', Wallet.Reflections.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" SFM\"]},\n            {Data: ['Reflections Value', Wallet.ReflectionsValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")]},\n            {Data : [<h2 className=\"table__data__header\">Estimations</h2>]},\n            {Data: ['Spent', Wallet.Spent.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")]},\n            {Data: ['Cost Avg', Wallet.CostAvg.toString()]},\n            {Data: ['Gains / losses', Wallet.Gains.toString() + \"%\"]}\n        ]\n        setStats(prev => prev = temp)\n        ComputeBuys(Wallet.BuysArray)\n        ComputeSells(Wallet.SellsArray)\n        ComputeTransfers(Wallet.TransfersArray)\n\n    }, [Index, props.Currency, props.Index, props.Tracker])\n\n    const ComputeTransfers = (TransfersArray) => {\n        //Preparing data for Transactions Table \n        var transactionstemp = [] \n        var monthtemp = \"\"\n        var monthtemp2 = \"\" \n        for (let i = TransfersArray.length - 1; i >= 0; i--) {\n            if(TransfersArray[i].dateTime.toString().includes(\".\")){\n                if(TransfersArray[i].dateTime.toString().split(\".\")[1] !== monthtemp){\n                    monthtemp = TransfersArray[i].dateTime.toString().split(\".\")[1]\n                    let month\n                    if(monthtemp === \"1\"){\n                        month = \"January\"\n                    } else if(monthtemp === \"2\") {\n                        month = \"February\"\n                    } else if(monthtemp === \"3\") {\n                        month = \"March\"\n                    } else if(monthtemp === \"4\") {\n                        month = \"April\"\n                    } else if(monthtemp === \"5\") {\n                        month = \"May\"\n                    } else if(monthtemp === \"6\") {\n                        month = \"June\"\n                    } else if(monthtemp === \"7\") {\n                        month = \"July\"\n                    } else if(monthtemp === \"8\") {\n                        month = \"August\"\n                    } else if(monthtemp === \"9\") {\n                        month = \"September\"\n                    } else if(monthtemp === \"10\") {\n                        month = \"October\"\n                    } else if(monthtemp === \"11\") {\n                        month = \"November\"\n                    } else if(monthtemp === \"12\") {\n                        month = \"December\"\n                    }\n                    transactionstemp.push({\n                        Data: [\n                            month + \" \" + TransfersArray[i].dateTime.toString().split(\".\")[2]\n                        ],\n                    })\n                }\n            } else {\n                if(TransfersArray[i].dateTime.toString().split(\" \")[1] !== monthtemp2){\n                    if(TransfersArray[i].dateTime.toString().split(\" \")[1] === \"Jan\"){\n                        monthtemp = \"1\"\n                    } else if(TransfersArray[i].dateTime.toString().split(\" \")[1] === \"Feb\") {\n                        monthtemp = \"2\"\n                    } else if(TransfersArray[i].dateTime.toString().split(\" \")[1] === \"Mar\") {\n                        monthtemp = \"3\"\n                    } else if(TransfersArray[i].dateTime.toString().split(\" \")[1] === \"Apr\") {\n                        monthtemp = \"4\"\n                    } else if(TransfersArray[i].dateTime.toString().split(\" \")[1] === \"May\") {\n                        monthtemp = \"5\"\n                    } else if(TransfersArray[i].dateTime.toString().split(\" \")[1] === \"Jun\") {\n                        monthtemp = \"6\"\n                    } else if(TransfersArray[i].dateTime.toString().split(\" \")[1] === \"Jul\") {\n                        monthtemp = \"7\"\n                    } else if(TransfersArray[i].dateTime.toString().split(\" \")[1] === \"Aug\") {\n                        monthtemp = \"8\"\n                    } else if(TransfersArray[i].dateTime.toString().split(\" \")[1] === \"Sep\") {\n                        monthtemp = \"9\"\n                    } else if(TransfersArray[i].dateTime.toString().split(\" \")[1] === \"Oct\") {\n                        monthtemp = \"10\"\n                    } else if(TransfersArray[i].dateTime.toString().split(\" \")[1] === \"Nov\") {\n                        monthtemp = \"11\"\n                    } else if(TransfersArray[i].dateTime.toString().split(\" \")[1] === \"Dec\") {\n                        monthtemp = \"12\"\n                    }\n                    \n                    monthtemp2 = TransfersArray[i].dateTime.toString().split(\" \")[1]\n                    let month\n                    if(monthtemp === \"1\"){\n                        month = \"January\"\n                    } else if(monthtemp === \"2\") {\n                        month = \"February\"\n                    } else if(monthtemp === \"3\") {\n                        month = \"March\"\n                    } else if(monthtemp === \"4\") {\n                        month = \"April\"\n                    } else if(monthtemp === \"5\") {\n                        month = \"May\"\n                    } else if(monthtemp === \"6\") {\n                        month = \"June\"\n                    } else if(monthtemp === \"7\") {\n                        month = \"July\"\n                    } else if(monthtemp === \"8\") {\n                        month = \"August\"\n                    } else if(monthtemp === \"9\") {\n                        month = \"September\"\n                    } else if(monthtemp === \"10\") {\n                        month = \"October\"\n                    } else if(monthtemp === \"11\") {\n                        month = \"November\"\n                    } else if(monthtemp === \"12\") {\n                        month = \"December\"\n                    }\n                    transactionstemp.push({\n                        Data: [\n                            month + \" \" + TransfersArray[i].dateTime.toString().split(\" \")[3]\n                        ],\n                    })\n                }\n            }\n\n            var Style\n            TransfersArray[i].To === '0x42981d0bfbaf196529376ee702f2a9eb9092fcb5' || TransfersArray[i].To === '0x0000000000000000000000000000000000000001' || TransfersArray[i].To === '0xefecd68f9549d47cbeca0a2fd9bd09cf4ec6a5d6' ? Style = \"Passive\" : TransfersArray[i].From === '0x678ee23173dce625a90ed651e91ca5138149f590' ? Style = \"Positiv\" : Style = \"\"\n            transactionstemp.push({\n                Data: [\n                    ConvertInt(parseInt(TransfersArray[i].Safemoonv2)),\n                    parseFloat(TransfersArray[i].Price).toFixed(8) + \" \" + props.Currency,\n                    ConvertInt(parseInt(TransfersArray[i].USD)) + \" \" + props.Currency,\n                ],\n                Link: \"https://bscscan.com/tx/\" + TransfersArray[i].Hash,\n                Style: Style\n            })\n        }\n        setTransfers(() => transactionstemp)\n    }\n\n    const ComputeBuys = (BuysArray) => {\n        //Preparing data for Buys Table\n        var buystemp = [] \n        var monthtemp = \"\"\n        var monthtemp2 = \"\" \n        for (let i = BuysArray.length - 1; i >= 0; i--) {\n            if(BuysArray[i].dateTime.toString().includes(\".\")){\n                if(BuysArray[i].dateTime.toString().split(\".\")[1] !== monthtemp){\n                    monthtemp = BuysArray[i].dateTime.toString().split(\".\")[1]\n                    let month\n                    if(monthtemp === \"1\"){\n                        month = \"January\"\n                    } else if(monthtemp === \"2\") {\n                        month = \"February\"\n                    } else if(monthtemp === \"3\") {\n                        month = \"March\"\n                    } else if(monthtemp === \"4\") {\n                        month = \"April\"\n                    } else if(monthtemp === \"5\") {\n                        month = \"May\"\n                    } else if(monthtemp === \"6\") {\n                        month = \"June\"\n                    } else if(monthtemp === \"7\") {\n                        month = \"July\"\n                    } else if(monthtemp === \"8\") {\n                        month = \"August\"\n                    } else if(monthtemp === \"9\") {\n                        month = \"September\"\n                    } else if(monthtemp === \"10\") {\n                        month = \"October\"\n                    } else if(monthtemp === \"11\") {\n                        month = \"November\"\n                    } else if(monthtemp === \"12\") {\n                        month = \"December\"\n                    }\n                    buystemp.push({\n                        Data: [\n                            month + \" \" + BuysArray[i].dateTime.toString().split(\".\")[2]\n                        ],\n                    })\n                }\n            } else {\n                if(BuysArray[i].dateTime.toString().split(\" \")[1] !== monthtemp2){\n                    if(BuysArray[i].dateTime.toString().split(\" \")[1] === \"Jan\"){\n                        monthtemp = \"1\"\n                    } else if(BuysArray[i].dateTime.toString().split(\" \")[1] === \"Feb\") {\n                        monthtemp = \"2\"\n                    } else if(BuysArray[i].dateTime.toString().split(\" \")[1] === \"Mar\") {\n                        monthtemp = \"3\"\n                    } else if(BuysArray[i].dateTime.toString().split(\" \")[1] === \"Apr\") {\n                        monthtemp = \"4\"\n                    } else if(BuysArray[i].dateTime.toString().split(\" \")[1] === \"May\") {\n                        monthtemp = \"5\"\n                    } else if(BuysArray[i].dateTime.toString().split(\" \")[1] === \"Jun\") {\n                        monthtemp = \"6\"\n                    } else if(BuysArray[i].dateTime.toString().split(\" \")[1] === \"Jul\") {\n                        monthtemp = \"7\"\n                    } else if(BuysArray[i].dateTime.toString().split(\" \")[1] === \"Aug\") {\n                        monthtemp = \"8\"\n                    } else if(BuysArray[i].dateTime.toString().split(\" \")[1] === \"Sep\") {\n                        monthtemp = \"9\"\n                    } else if(BuysArray[i].dateTime.toString().split(\" \")[1] === \"Oct\") {\n                        monthtemp = \"10\"\n                    } else if(BuysArray[i].dateTime.toString().split(\" \")[1] === \"Nov\") {\n                        monthtemp = \"11\"\n                    } else if(BuysArray[i].dateTime.toString().split(\" \")[1] === \"Dec\") {\n                        monthtemp = \"12\"\n                    }\n                    \n                    monthtemp2 = BuysArray[i].dateTime.toString().split(\" \")[1]\n                    let month\n                    if(monthtemp === \"1\"){\n                        month = \"January\"\n                    } else if(monthtemp === \"2\") {\n                        month = \"February\"\n                    } else if(monthtemp === \"3\") {\n                        month = \"March\"\n                    } else if(monthtemp === \"4\") {\n                        month = \"April\"\n                    } else if(monthtemp === \"5\") {\n                        month = \"May\"\n                    } else if(monthtemp === \"6\") {\n                        month = \"June\"\n                    } else if(monthtemp === \"7\") {\n                        month = \"July\"\n                    } else if(monthtemp === \"8\") {\n                        month = \"August\"\n                    } else if(monthtemp === \"9\") {\n                        month = \"September\"\n                    } else if(monthtemp === \"10\") {\n                        month = \"October\"\n                    } else if(monthtemp === \"11\") {\n                        month = \"November\"\n                    } else if(monthtemp === \"12\") {\n                        month = \"December\"\n                    }\n                    buystemp.push({\n                        Data: [\n                            month + \" \" + BuysArray[i].dateTime.toString().split(\" \")[3]\n                        ],\n                    })\n                }\n            }\n            buystemp.push({\n                Data: [\n                    ConvertInt(parseInt(BuysArray[i].Safemoonv2)),\n                    parseFloat(BuysArray[i].Price).toFixed(8) + \" \" + props.Currency,\n                    ConvertInt(parseInt(BuysArray[i].USD)) + \" \" + props.Currency,\n                ],\n                Link: \"https://bscscan.com/tx/\" + BuysArray[i].Hash\n            })\n        }\n        console.log(buystemp)\n        setBuys(() => buystemp)\n    }\n\n    const ComputeSells = (SellsArray) => {\n        //Preparing data for Sells Table \n        var sellstemp = [] \n        var monthtemp = \"\"\n        var monthtemp2 = \"\" \n        for (let i = SellsArray.length - 1; i >= 0; i--) {\n            if(SellsArray[i].dateTime.toString().includes(\".\")){\n                if(SellsArray[i].dateTime.toString().split(\".\")[1] !== monthtemp){\n                    monthtemp = SellsArray[i].dateTime.toString().split(\".\")[1]\n                    let month\n                    if(monthtemp === \"1\"){\n                        month = \"January\"\n                    } else if(monthtemp === \"2\") {\n                        month = \"February\"\n                    } else if(monthtemp === \"3\") {\n                        month = \"March\"\n                    } else if(monthtemp === \"4\") {\n                        month = \"April\"\n                    } else if(monthtemp === \"5\") {\n                        month = \"May\"\n                    } else if(monthtemp === \"6\") {\n                        month = \"June\"\n                    } else if(monthtemp === \"7\") {\n                        month = \"July\"\n                    } else if(monthtemp === \"8\") {\n                        month = \"August\"\n                    } else if(monthtemp === \"9\") {\n                        month = \"September\"\n                    } else if(monthtemp === \"10\") {\n                        month = \"October\"\n                    } else if(monthtemp === \"11\") {\n                        month = \"November\"\n                    } else if(monthtemp === \"12\") {\n                        month = \"December\"\n                    }\n                    sellstemp.push({\n                        Data: [\n                            month + \" \" + SellsArray[i].dateTime.toString().split(\".\")[2]\n                        ],\n                    })\n                }\n            } else {\n                if(SellsArray[i].dateTime.toString().split(\" \")[1] !== monthtemp2){\n                    if(SellsArray[i].dateTime.toString().split(\" \")[1] === \"Jan\"){\n                        monthtemp = \"1\"\n                    } else if(SellsArray[i].dateTime.toString().split(\" \")[1] === \"Feb\") {\n                        monthtemp = \"2\"\n                    } else if(SellsArray[i].dateTime.toString().split(\" \")[1] === \"Mar\") {\n                        monthtemp = \"3\"\n                    } else if(SellsArray[i].dateTime.toString().split(\" \")[1] === \"Apr\") {\n                        monthtemp = \"4\"\n                    } else if(SellsArray[i].dateTime.toString().split(\" \")[1] === \"May\") {\n                        monthtemp = \"5\"\n                    } else if(SellsArray[i].dateTime.toString().split(\" \")[1] === \"Jun\") {\n                        monthtemp = \"6\"\n                    } else if(SellsArray[i].dateTime.toString().split(\" \")[1] === \"Jul\") {\n                        monthtemp = \"7\"\n                    } else if(SellsArray[i].dateTime.toString().split(\" \")[1] === \"Aug\") {\n                        monthtemp = \"8\"\n                    } else if(SellsArray[i].dateTime.toString().split(\" \")[1] === \"Sep\") {\n                        monthtemp = \"9\"\n                    } else if(SellsArray[i].dateTime.toString().split(\" \")[1] === \"Oct\") {\n                        monthtemp = \"10\"\n                    } else if(SellsArray[i].dateTime.toString().split(\" \")[1] === \"Nov\") {\n                        monthtemp = \"11\"\n                    } else if(SellsArray[i].dateTime.toString().split(\" \")[1] === \"Dec\") {\n                        monthtemp = \"12\"\n                    }\n                    \n                    monthtemp2 = SellsArray[i].dateTime.toString().split(\" \")[1]\n                    let month\n                    if(monthtemp === \"1\"){\n                        month = \"January\"\n                    } else if(monthtemp === \"2\") {\n                        month = \"February\"\n                    } else if(monthtemp === \"3\") {\n                        month = \"March\"\n                    } else if(monthtemp === \"4\") {\n                        month = \"April\"\n                    } else if(monthtemp === \"5\") {\n                        month = \"May\"\n                    } else if(monthtemp === \"6\") {\n                        month = \"June\"\n                    } else if(monthtemp === \"7\") {\n                        month = \"July\"\n                    } else if(monthtemp === \"8\") {\n                        month = \"August\"\n                    } else if(monthtemp === \"9\") {\n                        month = \"September\"\n                    } else if(monthtemp === \"10\") {\n                        month = \"October\"\n                    } else if(monthtemp === \"11\") {\n                        month = \"November\"\n                    } else if(monthtemp === \"12\") {\n                        month = \"December\"\n                    }\n                    sellstemp.push({\n                        Data: [\n                            month + \" \" + SellsArray[i].dateTime.toString().split(\" \")[3]\n                        ],\n                    })\n                }\n            }\n            sellstemp.push({\n                Data: [\n                    ConvertInt(parseInt(SellsArray[i].Safemoonv2)),\n                    parseFloat(SellsArray[i].Price).toFixed(8) + \" \" + props.Currency,\n                    ConvertInt(parseInt(SellsArray[i].USD)) + \" \" + props.Currency,\n                ],\n                Link: \"https://bscscan.com/tx/\" + SellsArray[i].Hash\n            })\n        }\n        setSells(() => sellstemp)\n    }\n    return(\n        <div className=\"flex flex-standard__wrap big-container\">\n            {props.Loading && <Loader />}\n            {!props.Loading && <div className=\"half-container flex-center\">\n                <div>\n                    <Text>\n                    <h3 >\n                        Results\n                    </h3>\n                    <p className=\"table__subtext\">{props.Metric}</p>\n                    </Text>\n                </div>\n                {!props.Loading && Stats.length > 0 && \n                    <Table \n                        TableID={props.Tracker[props.Index].Address + \"Stats\"}\n                        Headers={[\"\", \"\"]}\n                        TableData={Stats}\n                        TableStyle=\"Horizontal\"\n                    />\n                }\n                \n            </div>}\n            \n            {!props.Loading && data.length > 0 && <div className=\"half-container\">\n                <div>\n                    <Text>\n                    <h3 >\n                        Lifetime tokens\n                    </h3>\n                    </Text>\n                </div>\n                <PieChart\n                    data={data}\n                    radius={30}\n                    startAngle={45}\n                    label={({ dataEntry }) => dataEntry.title}\n                    labelStyle={{\n                        fontSize: '.2rem',\n                        fontFamily: 'Montserrat, sans-serif',\n                        fill: '#fff',\n                      }}\n                    animate\n                />\n            </div>}\n            \n            <div className=\"flex-column flex-standard__wrap big-container max-height100\">\n                {!props.Loading && props.Tracker[props.Index].BuysArray.length > 0 && \n                <div className=\"small-container\">\n                    <div>\n                        <Text>\n                            <h3 >\n                                Your Buys\n                            </h3>\n                        </Text>\n                    </div>\n                    <TableLink \n                        TableID={props.Tracker[props.Index].Address + \"Buys\"}\n                        Headers={[\"Quantity\", \"Price\", \"Value\"]}\n                        TableData={Buys}\n                        TableStyle=\"Horizontal\"\n                    />\n                </div>}\n                {!props.Loading && props.Tracker[props.Index].SellsArray.length > 0 && \n                <div className=\"small-container\">\n                    <div>\n                        <Text>\n                            <h3 >\n                                Your Sells\n                            </h3>\n                        </Text>\n                    </div>\n                    <TableLink \n                        TableID={props.Tracker[props.Index].Address + \"Sells\"}\n                        Headers={[\"Quantity\", \"Price\", \"Value\"]}\n                        TableData={Sells}\n                        TableStyle=\"Horizontal\"\n                    />\n                </div>}\n                {!props.Loading && props.Tracker[props.Index].TransfersArray.length > 0 && \n                <div className=\"small-container\">\n                    <div>\n                        <Text>\n                            <h3 >\n                                Your Transfers\n                            </h3>\n                        </Text>\n                    </div>\n                    <TableLink \n                        TableID={props.Tracker[props.Index].Address + \"Transfers\"}\n                        Headers={[\"Quantity\", \"Price\", \"Value\"]}\n                        TableData={Transfers}\n                        TableStyle=\"Horizontal\"\n                    />\n                </div>}\n\n            </div>\n        </div>\n    )\n}\n\nexport default Output","import React, {useState, useEffect} from 'react'\nimport {Axios} from '../components/Shared/Axios'\n\nimport Main from './../components/UI/Main/Main'\nimport Grid from './../components/UI/Grid'\nimport Input from './../components/Tracker/Input'\nimport Output from './../components/Tracker/Output'\nimport Loader from './../components/UI/Loader'\n\nconst Tracker = () => {\n    const [loading, setLoading] = useState(false)\n    const [Wallet, setWallet] = useState([])\n    const [Activated, setActivated] = useState(false)\n    const [Error, setError] = useState(false)\n    const [Message, setMessage] = useState(false)\n    const [Index, setIndex] = useState(0)\n    const [Tracker, setTracker] = useState([])\n    const [Currency, setCurrency] = useState()\n    const CombinedTracker = []\n    \n    useEffect(() => {\n        if(!JSON.parse(localStorage.getItem(\"Currency\"))){\n            localStorage.setItem(\"Currency\", JSON.stringify([{Currency: 'USD', Rate: 1}]))\n        }\n        if(JSON.parse(localStorage.getItem(\"Wallet\")) && JSON.parse(localStorage.getItem(\"Wallets\")).length === 1){\n            var wallet = JSON.parse(localStorage.getItem(\"Wallet\"))\n            UpdateWallet(wallet.Address)\n        } else if (JSON.parse(localStorage.getItem(\"Wallet\")) && JSON.parse(localStorage.getItem(\"Wallets\")).length > 1){\n            var Wallets = JSON.parse(localStorage.getItem(\"Wallets\"))\n            console.log(Wallets)\n            var temp = []\n            for (let e of Wallets){\n                temp.push(e.Address)\n            }\n            Error && setError(prevValue => prevValue = false)\n            !Message && setMessage(prevValue => prevValue = 'Address OK'.toUpperCase())\n            setWallet(() => temp)\n        }else {\n            setWallet(prev => prev = ['0x0000000000000000000000000000000000000001'])\n        }\n        var Currency = JSON.parse(localStorage.getItem(\"Currency\"))[0]\n        setCurrency(prev => prev = Currency)\n    }, [])\n\n    const UpdateWallet = (Values) => {\n        var temp = []\n        Values = Values.split(\",\")\n        for (let Value of Values){\n            Value = Value.replace(\" \", \"\")\n            if(\n                Value.length === 42 &&\n                Value.substring(0,2) === '0x' &&\n                Value.toLowerCase() !== \"0x92b1d615aa1511ea24c203ff48b0815800079a88\" &&\n                Value.toLowerCase() !== \"0x8c128dba2cb66399341aa877315be1054be75da8\" && \n                Value.toLowerCase() !== \"0xa8736b9585a01d6dcc1b6e2fc9dc208552c34b58\" && \n                Value.toLowerCase() !== \"0xff3dd404afba451328de089424c74685bf0a43c9\" && \n                Value.toLowerCase() !== \"0x79c4af7c43f500b9ccba9396d079cc03dfcafda1\" && \n                Value.toLowerCase() !== \"0xd51d1d5503dcff819e214faa66c3b6f0ebb06abe\" && \n                Value.toLowerCase() !== \"0x97b85b5cf219f4b3b5259431d4b5835334767e6a\" && \n                Value.toLowerCase() !== \"0xcd198be08a33cbe2172f3be45cdb431e060076bc\" && \n                Value.toLowerCase() !== \"0x9eca52d3b9ec0cc2f2d62c0dba155952ae6d57d2\" && \n                Value.toLowerCase() !== \"0x1f5e3785aa4605908e12f8049f9c12a9f32980bb\" && \n                Value.toLowerCase() !== \"0x9adc6fb78cefa07e13e9294f150c1e8c1dd566c0\" && \n                Value.toLowerCase() !== \"0x33eac50b7faf4b8842a621d0475335693f5d21fe\" && \n                Value.toLowerCase() !== \"0xc7029e939075f48fa2d5953381660c7d01570171\" && \n                Value.toLowerCase() !== \"0x8076c74c5e3f5852037f31ff0093eeb8c8Add8d3\" && \n                Value.toLowerCase() !== \"0x0D0707963952f2fBA59dD06f2b425ace40b492Fe\" && \n                Value.toLowerCase() !== \"0x42981d0bfbaf196529376ee702f2a9eb9092fcb5\" && \n                Value.toLowerCase() !== \"0x87d7fd8c446cb5d3da3ca23f429e7b7504d1931c\" && \n                Value.toLowerCase() !== \"0xf651e909E5d2567072F042cb6A75373e26c89B8b\" && \n                Value.toLowerCase() !== \"0x8FB9BBFd97FfF7bbA69c0162A9632C9503B29CD4\" && \n                Value.toLowerCase() !== \"0xc223A5cEecd9088C92C76504755507D18913A944\" && \n                Value.toLowerCase() !== \"0x0000000000000000000000000000000000000001\" && \n                Value.toLowerCase() !== \"0x678ee23173dce625a90ed651e91ca5138149f590\" && \n                Value.toLowerCase() !== \"0xc223a5ceecd9088c92c76504755507d18913a944\" && \n                Value.toLowerCase() !== \"0x8fb9bbfd97fff7bba69c0162a9632c9503b29cd4\" && \n                Value.toLowerCase() !== \"0x328130164d0F2B9D7a52edC73b3632e713ff0ec6\" && \n                Value.toLowerCase() !== \"0x4982085c9e2f89f2ecb8131eca71afad896e89cb\" && \n                Value.toLowerCase() !== \"0xefeCD68F9549D47cBECA0A2Fd9bd09CF4eC6a5D6\" && \n                Value.toLowerCase() !== \"0xd11616e66b128c0b756b91cc13466defaae67d07\" && \n                Value.toLowerCase() !== \"0x868f027a5e3bd1cd29606a6681c3ddb7d3dd9b67\" && \n                Value.toLowerCase() !== \"0xdaa3b5ae0521264e55f45157eb6e158e1f3e5012\" && \n                Value.toLowerCase() !== \"0x489519cF1B56C98a31B212b58Df942a35b6921F4\" && \n                Value.toLowerCase() !== \"0x856a1c95bef293de7367b908df2b63ba30fbdd59\"){\n                continue\n            }  else {    \n                if(Value.length > 42){\n                    temp.push({Address : Value.substring(0, 5), Message : \"Address too long\"})\n                } else if (Value.length < 42 && Value.length !== 0) {\n                    temp.push({Address : Value.substring(0, 5), Message : \"Address short long\"})\n                } else if (Value.length === 0) {\n                    continue\n                } else if (Value.substring(0,2) !== '0x') {\n                    temp.push({Address : Value.substring(0, 5), Message : \"Wrong format\"})\n                } else {\n                    temp.push({Address : Value.substring(0, 5), Message : \"Address excluded\"})\n                }\n            }\n        }\n        console.log(temp, Values)\n        if(temp.length === 0 && Values.length > 0 && !Values.includes(\"\")){\n            Error && setError(prevValue => prevValue = false)\n            !Message && setMessage(prevValue => prevValue = 'Address OK'.toUpperCase())\n            setWallet(prevValue => \n              prevValue = Values\n            )\n        } else {\n            var ErrorMessage = \"\"\n            Message && setMessage(prevValue => prevValue = false)\n            for(let Error of temp){\n                ErrorMessage += Error.Address + ': ' + Error.Message + \" \"\n            }\n            setError(prevValue => \n                prevValue = ErrorMessage\n            )\n        }\n    }\n\n    const TransactionCategorization = (Value, Address) => {\n        let temp = {\n            Direction : '',\n            Type : ''\n        }\n        \n        Value = JSON.parse(Value)\n\n        //Buy\n        if(Value.To === Address.toLowerCase()){\n            temp.Direction = 'In'\n            if (\n                //BitMart\n                Value.From === '0x328130164d0f2b9d7a52edc73b3632e713ff0ec6' ||\n                //WhiteBit\n                Value.From === '0x33eac50b7faf4b8842a621d0475335693f5d21fe' ||\n                //Gate IO\n                Value.From === '0x0d0707963952f2fba59dd06f2b425ace40b492fe' ||\n                //HotBit\n                Value.From === '0xc7029e939075f48fa2d5953381660c7d01570171' ||\n                //MEXC\n                Value.From === '0x4982085c9e2f89f2ecb8131eca71afad896e89cb' ||\n                //HotBit\n                Value.From === '0xc7029e939075f48fa2d5953381660c7d01570171' ||\n                //BitTrue\n                Value.From === '0x868f027a5e3bd1cd29606a6681c3ddb7d3dd9b67' ||\n                //Mandala\n                Value.From === '0x8894e0a0c962cb723c1976a4421c95949be2d4e3' ||\n                //BIKI\n                Value.From === '0x3fdf750fb555583374b26a5ff476abbd7f6e6fb5' ||\n                //BIKI\n                Value.From === '0x87067ddcfddf4c6790207132848cfbbe5cd6f939' ||\n                //LBank\n                Value.From === '0x124d9bf2fecbc16b54ec4accdb14d44c2144f012' ||\n                //ZGB\n                Value.From === '0x8af8f4df5c463db7ab24ec66cee7546c9a310f56' ||\n                //BitForex\n                Value.From === '0x3a723e58c4808dde4591543282adc7d6b378715b' ||\n                //Decoin\n                Value.From === '0x2c6cc8e98adc0b3f3505c29d63fcdd76ac0e2ba4' ||\n                //Quidax\n                Value.From === '0x7d7fc48fc930552957dc585726d9628f5319c038'\n            ) {\n                temp.Type = 'CEX'\n            } else if (\n                //LP Providers\n                Value.From === '0x8c128dba2cb66399341aa877315be1054be75da8' ||\n                //LP Providers\n                Value.From === '0xff3dd404afba451328de089424c74685bf0a43c9' ||\n                //LP Providers\n                Value.From === '0x79c4af7c43f500b9ccba9396d079cc03dfcafda1' ||\n                //LP Providers\n                Value.From === '0x9eca52d3b9ec0cc2f2d62c0dba155952ae6d57d2' ||\n                //LP Providers\n                Value.From === '0x391c9d82af4edd7d3ec23cefabf9a35b630b3a7a' ||\n                //LP Providers\n                Value.From === '0xd11616e66b128c0b756b91cc13466defaae67d07' ||\n                //Swap LP\n                Value.From === '0x856a1c95bef293de7367b908df2b63ba30fbdd59' ||\n                //Swap LP\n                Value.From === '0xe804f3c3e6dda8159055428848fe6f2a91c2b9af' ||\n                // Swap LP\n                Value.From === '0xa8736b9585a01d6dcc1b6e2fc9dc208552c34b58' ||\n                // Swap LP\n                Value.From === '0x8fb9bbfd97fff7bba69c0162a9632c9503b29cd4' ||\n                //Pancake Swap\n                Value.From === '0x9adc6fb78cefa07e13e9294f150c1e8c1dd566c0' ||\n                //Pancake Swap\n                Value.From === '0x87d7fd8c446cb5d3da3ca23f429e7b7504d1931c' ||\n                //Pancake Swap\n                Value.From === '0xe2f99ab0a62b72773b6eac227f9b9c161494e8a9' ||\n                //Pancake Swap\n                Value.From === '0x29e99847a4f968372cf573a7965e2ad954cb0cbc' ||\n                //Pancake Swap\n                Value.From === '0xef967e3da982ecc1c84bbe6053fd61af2a65bb9a' ||\n                //?\n                Value.From === '0x2ad2c5314028897aecfcf37fd923c079beeb2c56'\n            ){\n                temp.Type = 'Buy'\n            } else if (\n                //Migration\n                Value.From === '0x678ee23173dce625a90ed651e91ca5138149f590'\n            ) {\n                temp.Type = 'Migration'\n            } else {\n                temp.Type = 'Transfer'\n            }\n        //Sell\n        } else {\n            temp.Direction = 'Out'\n            if(Value.To === '0xefecd68f9549d47cbeca0a2fd9bd09cf4ec6a5d6'){\n                temp.Type = 'Growth Fund'\n            } else if (Value.To === '0x42981d0bfbaf196529376ee702f2a9eb9092fcb5' && Value.State === 'V2'){\n                temp.Type = 'LP'\n            } else if (Value.To === '0x0000000000000000000000000000000000000001'){\n                temp.Type = 'Burn'\n            } else if (\n                //BitMart\n                Value.To === '0x328130164d0f2b9d7a52edc73b3632e713ff0ec6' ||\n                //WhiteBit\n                Value.To === '0x33eac50b7faf4b8842a621d0475335693f5d21fe' ||\n                //Gate IO\n                Value.To === '0x0d0707963952f2fba59dd06f2b425ace40b492fe' ||\n                //HotBit\n                Value.To === '0xc7029e939075f48fa2d5953381660c7d01570171' ||\n                //MEXC\n                Value.To === '0x4982085c9e2f89f2ecb8131eca71afad896e89cb' ||\n                //HotBit\n                Value.To === '0xc7029e939075f48fa2d5953381660c7d01570171' ||\n                //BitTrue\n                Value.To === '0x868f027a5e3bd1cd29606a6681c3ddb7d3dd9b67' ||\n                //Mandala\n                Value.To === '0x8894e0a0c962cb723c1976a4421c95949be2d4e3' ||\n                //BIKI\n                Value.To === '0x3fdf750fb555583374b26a5ff476abbd7f6e6fb5' ||\n                //BIKI\n                Value.To === '0x87067ddcfddf4c6790207132848cfbbe5cd6f939' ||\n                //LBank\n                Value.To === '0x124d9bf2fecbc16b54ec4accdb14d44c2144f012' ||\n                //ZGB\n                Value.To === '0x8af8f4df5c463db7ab24ec66cee7546c9a310f56' ||\n                //BitForex\n                Value.To === '0x3a723e58c4808dde4591543282adc7d6b378715b' ||\n                //Decoin\n                Value.To === '0x2c6cc8e98adc0b3f3505c29d63fcdd76ac0e2ba4' ||\n                //Quidax\n                Value.To === '0x7d7fc48fc930552957dc585726d9628f5319c038'\n            ) {\n                temp.Type = 'CEX'\n            } else if (\n                //LP Providers\n                Value.To === '0x8c128dba2cb66399341aa877315be1054be75da8' ||\n                //LP Providers\n                Value.To === '0xff3dd404afba451328de089424c74685bf0a43c9' ||\n                //LP Providers\n                Value.To === '0x79c4af7c43f500b9ccba9396d079cc03dfcafda1' ||\n                //LP Providers\n                Value.To === '0x9eca52d3b9ec0cc2f2d62c0dba155952ae6d57d2' ||\n                //LP Providers\n                Value.To === '0x391c9d82af4edd7d3ec23cefabf9a35b630b3a7a' ||\n                //LP Providers\n                Value.To === '0xd11616e66b128c0b756b91cc13466defaae67d07' ||\n                //Swap LP\n                Value.To === '0x856a1c95bef293de7367b908df2b63ba30fbdd59' ||\n                //Swap LP\n                Value.To === '0xe804f3c3e6dda8159055428848fe6f2a91c2b9af' ||\n                // Swap LP\n                Value.To === '0xa8736b9585a01d6dcc1b6e2fc9dc208552c34b58' ||\n                // Swap LP\n                Value.To === '0x8fb9bbfd97fff7bba69c0162a9632c9503b29cd4' ||\n                //Pancake Swap\n                Value.To === '0x9adc6fb78cefa07e13e9294f150c1e8c1dd566c0' ||\n                //Pancake Swap\n                Value.To === '0x87d7fd8c446cb5d3da3ca23f429e7b7504d1931c' ||\n                //Pancake Swap\n                Value.To === '0xe2f99ab0a62b72773b6eac227f9b9c161494e8a9' ||\n                //Pancake Swap\n                Value.To === '0x29e99847a4f968372cf573a7965e2ad954cb0cbc' ||\n                //Pancake Swap\n                Value.To === '0xef967e3da982ecc1c84bbe6053fd61af2a65bb9a' ||\n                //?\n                Value.To === '0x2ad2c5314028897aecfcf37fd923c079beeb2c56'\n            ){\n                temp.Type = 'Sell'\n            } else if (\n                //Migration\n                Value.To === '0x42981d0bfbaf196529376ee702f2a9eb9092fcb5' ||\n                //Migration\n                Value.To === '0x9d50518de14f89836f2b9b9ac05f177de7bf521a'\n            ) {\n                temp.Type = 'Migration'\n            } else {\n                temp.Type = 'Transfer'\n            }\n        }\n        return temp\n    }\n\n    const GetData = async () => {\n        setTracker(prev => prev = [])\n        setActivated(false)\n        setLoading(true)\n        var Price\n        var PriceArray = []\n        var Stats = {}\n        let Wallets = Wallet \n        await Axios('/api/Prices')\n        .then(async results => {\n            console.log(results)\n            Price = results.Stats.Price * Currency.Rate\n            await PrepPrice(results.Prices)\n            .then(result => {\n                PriceArray = result\n            })\n            Stats = results.Stats\n            ProccessData(Price, PriceArray, Stats, Wallets, 1)\n        })\n    }\n\n    const ProccessData = async (Price, PriceArray, Stats, Wallets, Itteration) => {\n        var WorkerWallet = Wallets[0].replace(\" \", \"\")\n        console.log(WorkerWallet, Wallet)\n        var TrackerTemp = {Address: WorkerWallet}\n        await Axios('/api/FetchHolders', {Wallet: WorkerWallet.toLowerCase()})\n        .then(holder => {\n            console.log(holder)\n            TrackerTemp.Position = holder[0].num_row\n            \n        })\n        Axios('/api/Tracker', {Wallet: WorkerWallet.toLowerCase()})\n        .then(async results => {\n            console.log(results)\n            TrackerTemp.Balance = parseInt(results.Balance / 1000000000)\n            TrackerTemp.Value = parseInt(TrackerTemp.Balance * Price)\n            TrackerTemp.MarketShare = parseFloat((TrackerTemp.Balance / Stats.CSupply) * 100).toFixed(4)\n            var Spend = 0\n            var BuyAmount = 0\n            var SellAmount = 0\n            var BuysArr = []\n            var SellsArr = []\n            var TransfersArr = []\n            await CategorizeV1(results.V1, PriceArray.Prices, WorkerWallet)\n            .then(arr => {\n                BuysArr = [...BuysArr, ...arr.Buys]\n                SellsArr = [...SellsArr, ...arr.Sells]\n                TransfersArr = [...TransfersArr, ...arr.Transfers]\n                Spend += arr.Spend\n                BuyAmount += arr.BuyAmount\n                SellAmount += arr.SellAmount\n            })\n\n            await CategorizeV2(results.V2, PriceArray.Prices2, WorkerWallet)\n            .then(arr => {\n                BuysArr = [...BuysArr, ...arr.Buys]\n                SellsArr = [...SellsArr, ...arr.Sells]\n                TransfersArr = [...TransfersArr, ...arr.Transfers]\n                Spend += arr.Spend\n                BuyAmount += arr.BuyAmount\n                SellAmount += arr.SellAmount\n            })\n            console.log(BuysArr)\n            Calculations(Price, Spend, BuyAmount, SellAmount, results.Balance / 1000000000, BuysArr, SellsArr, TransfersArr, TrackerTemp, {Price: Price, PriceArray: PriceArray, Stats: Stats, Wallet: Wallets, Itteration:Itteration})\n        })\n    }\n\n    const PrepPrice = (e) => {\n        let date\n        let prices\n        let hisPrice\n        var temp = {\n            Prices: [],\n            Prices2: []\n        }\n\n        for (let price of e) {\n            if(!price.createdAt){\n                date = price.snapped_at.toString().split(' ')[0]\n                date = new Date(date)\n                date = date.toLocaleDateString()\n                prices = price.price * Currency.Rate\n                hisPrice = {Date: date, Price: prices}\n                temp.Prices.push(hisPrice)\n            } else {\n                date = price.createdAt\n                date = new Date(date)\n                date = Date.parse(date)\n                prices = price.price * Currency.Rate\n                hisPrice = {Date: date, Price: prices}\n                temp.Prices2.push(hisPrice)\n            }\n        }\n        return new Promise((resolve) => {\n            resolve(temp)\n        });\n    }\n\n    const CategorizeV1 = async (e, Prices, Address) => {  \n        var complete = {Buys: [], Transfers: [], Sells: [], Spend: 0, BuyAmount: 0, SellAmount: 0}\n        if(e.length > 0){\n            var LoggedPrices = Prices\n            let temp = []\n            for(let Transaction of e){\n                let Price\n                \n                var USD = 0\n                var Amount = parseInt(Transaction.value / 1000000000)\n                var date = new Date(Transaction.timeStamp * 1000);\n                date = date.toLocaleDateString()\n    \n                //Get prices for V1\n                for (let price of LoggedPrices){\n                    if (date === price.Date){\n                        USD = parseFloat(((Amount / 90) * 100) * price.Price).toFixed(2)\n                        Price = price.Price\n                    }\n                }\n                if(!USD){\n                    USD = 0\n                }\n                var SafemoonAmount = parseFloat(Amount).toFixed(2)\n                var SafemoonAmountv2 = parseInt(Amount / 1000)\n\n                temp = {Hash: Transaction.hash, Amount: Amount, dateTime: date, USD: USD, Safemoon: SafemoonAmount, Safemoonv2: SafemoonAmountv2, Price: Price, Type: 0, From: Transaction.from, To: Transaction.to}\n\n                var Categorization = TransactionCategorization(JSON.stringify({To : Transaction.to, From : Transaction.from, State : 'V1'}), Address)\n\n                temp.Type = Categorization\n\n                if(\n                    Categorization.Type === 'Transfer' ||\n                    Categorization.Type === 'Migration' || \n                    Categorization.Type === 'Growth Fund' || \n                    Categorization.Type === 'Burn' || \n                    Categorization.Type === 'LP' || \n                    Categorization.Type === 'CEX'\n                ){\n                    Categorization.Type === 'Migration' && (temp.Safemoonv2 = parseInt((SafemoonAmountv2 / 90) * 100))\n                    complete.Transfers.push(temp)\n                } else if (Categorization.Type === 'Buy'){\n                    complete.BuyAmount += parseInt(SafemoonAmountv2)\n                    complete.Spend += parseInt(USD)\n                    complete.Buys.push(temp)\n                } else if (Categorization.Type === 'Sell'){\n                    complete.SellAmount += parseInt((SafemoonAmountv2 / 90) * 100)\n                    complete.Sells.push(temp)\n                }\n            }\n        }\n        return new Promise((resolve) => {\n            resolve(complete)\n        });\n    }\n\n    const CategorizeV2 = async (e, Prices, Address) => {\n        var complete = {Buys: [], Transfers: [], Sells: [], Spend: 0, BuyAmount: 0, SellAmount: 0}\n\n        if(e.length > 0){\n            var LoggedPrices = Prices\n            let temp = []\n            var date\n            for(let Transaction of e){\n\n                let Price\n                \n                var USD = 0\n                var Amount = parseInt(Transaction.value / 1000000000)\n                date = Transaction.timeStamp\n                //Get prices for V2\n                for (let price of LoggedPrices){\n                    var snappedDate = (price.Date / 1000);\n                    if (date < snappedDate - 900){\n                        USD = parseFloat(((Amount / 90) * 100) * price.Price).toFixed(2)\n                        Price = parseFloat(price.Price).toFixed(5)\n                        date = new Date(date * 1000)\n                        date.toLocaleString('en-GB', { hour12:false } )\n                        break;\n                    } else {\n                        continue;\n                    }\n                }\n                var SafemoonAmount = parseFloat(Amount).toFixed(2)\n                var SafemoonAmountv2 = parseInt(Amount)\n\n                temp = {Hash: Transaction.hash, Amount: Amount, dateTime: date, USD: USD, Safemoon: SafemoonAmount, Safemoonv2: SafemoonAmountv2, Price: Price, Type: 0, From: Transaction.from, To: Transaction.to}\n\n                var Categorization = TransactionCategorization(JSON.stringify({To : Transaction.to, From : Transaction.from, State : 'V2'}), Address)\n\n                temp.Type = Categorization\n\n                if(\n                    Categorization.Type === 'Transfer' ||\n                    Categorization.Type === 'Migration' || \n                    Categorization.Type === 'Growth Fund' || \n                    Categorization.Type === 'Burn' || \n                    Categorization.Type === 'LP' || \n                    Categorization.Type === 'CEX'\n                ){\n                    complete.Transfers.push(temp)\n                } else if (Categorization.Type === 'Buy'){\n                    complete.BuyAmount += parseInt(SafemoonAmountv2)\n                    complete.Spend += parseInt(USD)\n                    complete.Buys.push(temp)\n                } else if (Categorization.Type === 'Sell'){\n                    complete.SellAmount += parseInt((SafemoonAmountv2 / 90) * 100)\n                    complete.Sells.push(temp)\n                }\n            }\n        }\n        return new Promise((resolve) => {\n            resolve(complete)\n        });\n    }\n\n    const Calculations = async (Price, Spent, BuyAmount, SellAmount, Balance, Buys, Sells, Transfers, TrackerTemp, WalletsArray) => {\n        var TransferBalance = 0\n        for (let Transfer of Transfers){\n            if(Transfer.Type.Direction === 'In'){\n                TransferBalance += Transfer.Safemoonv2\n            } else if(Transfer.Type.Direction === 'Out' && (\n                Transfer.Type.Type !== 'Growth Fund' ||\n                Transfer.Type.Type !== 'LP' ||\n                Transfer.Type.Type !== 'Burn'\n            )){\n                TransferBalance -= Transfer.Safemoonv2\n            }\n        }\n        TrackerTemp.Buys = Buys.length + \"/\" + parseInt(Sells.length + Buys.length)\n        TrackerTemp.Sells = Sells.length + \"/\" + parseInt(Sells.length + Buys.length)\n        // var reflections = parseInt((Balance + SellAmount) - (BuyAmount + TransferInAmount))\n        TrackerTemp.Reflections = parseInt(((Balance - BuyAmount) + SellAmount) + (TransferBalance - (2 * TransferBalance)))\n        TrackerTemp.ReflectionsValue = parseInt(TrackerTemp.Reflections * Price)\n        TrackerTemp.Gains = parseFloat((((Balance * Price) - Spent) / Spent)*100).toFixed(2)\n        TrackerTemp.CostAvg = parseFloat(Spent / BuyAmount).toFixed(5)\n        TrackerTemp.BuysAmount = BuyAmount\n        TrackerTemp.SellsAmount = SellAmount\n        TrackerTemp.Spent = Spent\n        TrackerTemp.SellsArray = Sells\n        TrackerTemp.BuysArray = Buys\n        TrackerTemp.TransfersArray = Transfers\n        CombinedTracker.push(TrackerTemp)\n        setTracker(prev => prev = [...prev, TrackerTemp])\n\n        setLoading(false)\n        setActivated(true)\n        if(WalletsArray.Wallet.length > 1){\n            WalletsArray.Wallet.shift()\n            await new Promise((resolve) => setTimeout(resolve, 500))\n            ProccessData(WalletsArray.Price, WalletsArray.PriceArray, WalletsArray.Stats, WalletsArray.Wallet, WalletsArray.Itteration++)\n        }\n        await new Promise((resolve) => setTimeout(resolve, Wallet.length * 5000))\n\n        if(WalletsArray.Itteration > 1 && WalletsArray.Wallet.length === 1){\n            ComputeCombined(WalletsArray.Stats)\n        }\n    }\n\n    const ComputeCombined = (Stats) => {\n        var TotaledStats = {\n            Balance:0,\n            BuysLength:0,\n            BuysAmount:0,\n            CostAvg:0,\n            SellsLength:0,\n            SellsAmount:0,\n            Position:0,\n            Reflections:0,\n            ReflectionsValue:0,\n            Spent:0,\n            Value:0,\n        }\n        for(let e of CombinedTracker){\n            TotaledStats.Balance += e.Balance\n            TotaledStats.BuysLength += e.BuysArray.length\n            TotaledStats.BuysAmount += e.BuysAmount\n\n            TotaledStats.SellsLength += e.SellsArray.length\n            TotaledStats.SellsAmount += e.SellsAmount\n\n            TotaledStats.Reflections += e.Reflections\n            TotaledStats.ReflectionsValue += e.ReflectionsValue\n\n            TotaledStats.Spent += e.Spent\n            TotaledStats.Value += e.Value\n        }\n        Axios('/api/CombinedPositions', {Balance: TotaledStats.Balance})\n        .then(result => {\n            TotaledStats.Position = result[0].num_row\n            TotaledStats.Address = \"Combined\"\n            TotaledStats.Gains = parseFloat(((TotaledStats.Value - TotaledStats.Spent) / TotaledStats.Spent)*100).toFixed(2)\n            TotaledStats.CostAvg = parseFloat(TotaledStats.Spent / TotaledStats.BuysAmount).toFixed(5)\n            TotaledStats.Buys = TotaledStats.BuysLength + \"/\" + parseInt(TotaledStats.SellsLength + TotaledStats.BuysLength)\n            TotaledStats.Sells = TotaledStats.SellsLength + \"/\" + parseInt(TotaledStats.SellsLength + TotaledStats.BuysLength)\n            TotaledStats.MarketShare = parseFloat((TotaledStats.Balance / Stats.CSupply) * 100).toFixed(4)\n    \n            TotaledStats.BuysArray = []\n            TotaledStats.SellsArray = []\n            TotaledStats.TransfersArray = []\n            setTracker(prev => prev = [...prev, TotaledStats])\n        })\n    }   \n\n    const switchIndex = (e) => {\n        console.log(e)\n        console.log(e <= Tracker.length)\n        console.log(e > 0)\n\n        var n\n        if(e <= Tracker.length && e >= 0){\n            n = e\n        } else {\n            n = Index\n        }\n        console.log(n)\n\n        setIndex(prev => prev = n);\n    }\n\n    return(\n        <Main>\n            <Grid GridBox=\"full align-center\">\n                <div className=\"flex flex-standard__wrap big-container flex-column\">\n                    {!loading && \n                        <Input \n                            Title=\"Wallet Address\" \n                            Type=\"string\" \n                            PlaceHolder={Wallet[0] === '0x0000000000000000000000000000000000000001' ? Wallet : \"\"}\n                            isActivated={Activated} \n                            UpdateWallet={UpdateWallet} \n                            OnClickFunction={GetData} \n                            Error={Error} \n                            Message={Message} \n                            ButtonText=\"Go!\"\n                            SetValue={JSON.parse(localStorage.getItem(\"Wallet\")) || Activated ? Wallet : \"\"}\n                        />\n                    }\n                    {Activated && !loading && Tracker.length > 1 &&\n                        <table className=\"border-radius u-margin-top-small\">\n                            <thead>\n                                <tr>\n                                    <th>Wallets</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {Tracker.map((Wallet, x) =>\n                                    <tr key={x}>\n                                        <td className={Index === x ? \"choosen clickable border-radius\" : \"clickable border-radius\" } onClick={() => { switchIndex(x) }}>\n                                            {Wallet.Address}\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    }\n                    {Activated && !loading  && \n                        <Output \n                            Tracker={Tracker}\n                            Loading={loading}\n                            Index={Index}\n                            Currency={Currency.Currency}\n                        />\n                    }\n                </div>\n            </Grid>\n            {!Activated && loading && <Loader></Loader>}\n        </Main>\n    )\n}\n\nexport default Tracker\n","export const ConvertInt = (Value) => { \n    if (Value.toString().length > 3 && Value.toString().length < 7){\n        Value = parseFloat(Value / 1000).toFixed(2).toString() + \" K\"\n    } else if (Value.toString().length > 6 && Value.toString().length < 10){\n        Value = parseFloat(Value / 1000000).toFixed(2).toString() + \" M\"\n    } else if (Value.toString().length >= 10){\n        Value = parseFloat(Value / 1000000000).toFixed(2).toString() + \" B\"\n    }\n    return Value\n}","import React, {useEffect, useCallback} from 'react'\nimport ReactDOM from 'react-dom';\nimport downloadjs from 'downloadjs';\nimport html2canvas from 'html2canvas';\n\nconst Table = (props) => {\n    useEffect(() => {\n        console.log(props)\n        if(props.TableStyle === \"Horizontal\" && props.TableData){\n            setTableData(props.TableID)\n        } else if (props.TableStyle === \"Vertical\" && props.TableData){\n            setTableDataVertical(props.TableID)\n        }\n    }, [props.TableID, props.TableStyle, props.TableData, props.TableDataVertical])\n\n    const handleCaptureClick = useCallback(async () => {\n        const canvas = await html2canvas(document.getElementById(props.TableID));\n        const dataURL = canvas.toDataURL('image/png');\n        downloadjs(dataURL, props.TableID + '-' + new Date().getTime().toString() + '.png', 'image/png');\n    }, []);\n    \n    const setTableData = (ID) => {\n        var Header = (<thead><tr>{props.Headers.map((Header, i) => <th key={i} className=\"clickable\" onClick={handleCaptureClick}>{Header}</th>)}</tr></thead>)\n\n        var DataRows = (\n            <tbody>{props.TableData.map((Data, i) => \n                <tr key={i}>{Data.Data.map((data, x) => \n                    <td key={x} colSpan={Data.Data.length < props.Headers.length ? parseInt(props.Headers.length / Data.Data.length) : \"\"}>\n                        {data}\n                    </td>)}\n                </tr>)}\n            </tbody>\n        )\n\n        ReactDOM.render(\n            [Header, DataRows],\n            document.getElementById(ID)\n        )\n    }\n\n    const setTableDataVertical = (ID) => {\n        var DataRows = (<tbody>{props.TableData.map((Data, i) => <tr key={i}>{Data.Data.map((data, x) => <td key={x} colSpan={Data.Data.length < props.Headers.length ? parseInt(props.Headers.length / Data.Data.length) : \"\"}>{data}</td>)}</tr>)}</tbody>)\n\n        ReactDOM.render(\n            [DataRows],\n            document.getElementById(ID)\n        )\n    }\n\n    return (\n        <div className=\"border-radius overflow-hidden shadow\">\n            <table className=\"NewTable\" id={props.TableID}>\n            </table>\n        </div>\n    )\n}\n\nexport default Table\n","import React, {useEffect, useCallback} from 'react'\nimport ReactDOM from 'react-dom';\nimport downloadjs from 'downloadjs';\nimport html2canvas from 'html2canvas';\n\nconst TableLink = (props) => {\n    useEffect(() => {\n        console.log(props)\n        if(props.TableStyle === \"Horizontal\"){\n            setTableDataLink(props.TableID)\n        } else if (props.TableStyle === \"Vertical\"){\n            setTableDataVerticalLink(props.TableID)\n        }\n    }, [props.TableID, props.TableStyle, props.TableData, props.TableDataVertical])\n\n    const handleCaptureClick = useCallback(async () => {\n        const canvas = await html2canvas(document.getElementById(props.TableID));\n        const dataURL = canvas.toDataURL('image/png');\n        downloadjs(dataURL, props.TableID + '-' + new Date().getTime().toString() + '.png', 'image/png');\n    }, []);\n\n    const setTableDataLink = (ID) => {\n        var Header = (<thead><tr>{props.Headers.map((Header, i) => <th key={i} className=\"clickable\" onClick={handleCaptureClick}>{Header}</th>)}</tr></thead>)\n\n\n        var DataRows = (<tbody>{props.TableData.map((Data, i) => <tr key={i} className={Data.Style}>{Data.Data.map((data, x) => <td key={x} colSpan={Data.Data.length < props.Headers.length ? parseInt(props.Headers.length / Data.Data.length) : \"\"}><a href={Data.Link} target={Data.NewPage && \"_blank\"} rel=\"noreferrer\">{data}</a></td>)}</tr>)}</tbody>)\n\n        ReactDOM.render(\n            [Header, DataRows],\n            document.getElementById(ID)\n        )\n    }\n\n    const setTableDataVerticalLink = (ID) => {\n        var DataRows = (<tbody>{props.TableData.map((Data, i) => <tr key={i} >{Data.Data.map((data, x) => <td key={x} colSpan={Data.Data.length < props.Headers.length ? parseInt(props.Headers.length / Data.Data.length) : \"\"}><a href={Data.Link} target={Data.NewPage && \"_blank\"} rel=\"noreferrer\">{data}</a></td>)}</tr>)}</tbody>)\n\n        ReactDOM.render(\n            [DataRows],\n            document.getElementById(ID)\n        )\n    }\n\n    return (\n        <div className=\"border-radius overflow-hidden shadow\">\n            <table className=\"NewTable\" id={props.TableID}>\n            </table>\n        </div>\n    )\n}\n\nexport default TableLink\n","export function degreesToRadians(degrees: number) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport function valueBetween(value: number, min: number, max: number) {\n  if (value > max) return max;\n  if (value < min) return min;\n  return value;\n}\n\nexport function extractPercentage(value: number, percentage: number) {\n  return (percentage / 100) * value;\n}\n\nexport function bisectorAngle(startAngle: number, lengthAngle: number) {\n  return startAngle + lengthAngle / 2;\n}\n\nexport function shiftVectorAlongAngle(angle: number, distance: number) {\n  const angleRadians = degreesToRadians(angle);\n  return {\n    dx: distance * Math.cos(angleRadians),\n    dy: distance * Math.sin(angleRadians),\n  };\n}\n\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number';\n}\n\nexport function functionProp<Prop, Payload>(\n  prop: Prop,\n  payload?: Payload\n): Prop extends (...args: any) => any ? ReturnType<Prop> : Prop {\n  return typeof prop === 'function' ? prop(payload) : prop;\n}\n","import { extractPercentage, valueBetween } from '../utils';\nimport type { Data, ExtendedData } from '../commonTypes';\nimport type { PropsWithDefaults as ChartProps } from './Chart';\n\nfunction sumValues(data: Data): number {\n  let sum = 0;\n  for (let i = 0; i < data.length; i++) {\n    sum += data[i].value;\n  }\n  return sum;\n}\n\n// Append \"percentage\", \"degrees\" and \"startAngle\" to each data entry\nexport default function extendData({\n  data,\n  lengthAngle: totalAngle,\n  totalValue,\n  paddingAngle,\n  startAngle: chartStartAngle,\n}: ChartProps): ExtendedData {\n  const total = totalValue || sumValues(data);\n  const normalizedTotalAngle = valueBetween(totalAngle, -360, 360);\n  const numberOfPaddings =\n    Math.abs(normalizedTotalAngle) === 360 ? data.length : data.length - 1;\n  const singlePaddingDegrees = Math.abs(paddingAngle) * Math.sign(totalAngle);\n  const degreesTakenByPadding = singlePaddingDegrees * numberOfPaddings;\n  const degreesTakenByPaths = normalizedTotalAngle - degreesTakenByPadding;\n  let lastSegmentEnd = 0;\n  const extendedData = [];\n\n  // @NOTE: Shall we evaluate percentage accordingly to dataEntry.value's sign?\n  for (let i = 0; i < data.length; i++) {\n    const dataEntry = data[i];\n    const valueInPercentage = total === 0 ? 0 : (dataEntry.value / total) * 100;\n    const degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n    const startAngle = lastSegmentEnd + chartStartAngle;\n    lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n    extendedData.push(\n      Object.assign(\n        {\n          percentage: valueInPercentage,\n          startAngle,\n          degrees,\n        },\n        dataEntry\n      )\n    );\n  }\n  return extendedData;\n}\n","import React from 'react';\nimport type { CSSProperties, SVGProps } from 'react';\nimport type { ExtendedDataEntry } from './commonTypes';\n\nexport type LabelRenderProps = {\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  textAnchor: string;\n  dataEntry: ExtendedDataEntry;\n  dataIndex: number;\n  style?: CSSProperties;\n};\n\ntype Props = SVGProps<SVGTextElement> & LabelRenderProps;\n\nexport default function ReactMinimalPieChartLabel({\n  dataEntry,\n  dataIndex,\n  ...props\n}: Props) {\n  return <text dominantBaseline=\"central\" {...props} />;\n}\n","import React from 'react';\nimport DefaultLabel from '../Label';\nimport {\n  bisectorAngle,\n  extractPercentage,\n  functionProp,\n  shiftVectorAlongAngle,\n} from '../utils';\nimport type { PropsWithDefaults as ChartProps } from './Chart';\nimport type { LabelRenderProps } from '../Label';\nimport type { ExtendedData, LabelRenderFunction } from '../commonTypes';\n\nfunction round(number: number): number {\n  const divisor = 1e14; // 14 decimals\n  return Math.round((number + Number.EPSILON) * divisor) / divisor;\n}\n\nfunction evaluateTextAnchorPosition({\n  labelPosition,\n  lineWidth,\n  labelHorizontalShift,\n}: {\n  labelPosition: number;\n  lineWidth: number;\n  labelHorizontalShift: number;\n}) {\n  const dx = round(labelHorizontalShift);\n  // Label in the vertical center\n  if (dx === 0) {\n    return 'middle';\n  }\n  // Outward label\n  if (labelPosition > 100) {\n    return dx > 0 ? 'start' : 'end';\n  }\n  // Inward label\n  const innerRadius = 100 - lineWidth;\n  if (labelPosition < innerRadius) {\n    return dx > 0 ? 'end' : 'start';\n  }\n  // Overlying label\n  return 'middle';\n}\n\nfunction renderLabelElement(\n  renderLabel: LabelRenderFunction,\n  labelProps: LabelRenderProps\n): JSX.Element | null {\n  const label = renderLabel(labelProps);\n  if (typeof label === 'string' || typeof label === 'number') {\n    return (\n      <DefaultLabel\n        key={`label-${labelProps.dataEntry.key || labelProps.dataIndex}`}\n        {...labelProps}\n      >\n        {label}\n      </DefaultLabel>\n    );\n  }\n\n  if (React.isValidElement(label)) {\n    return label;\n  }\n  return null;\n}\n\nexport default function renderLabels(data: ExtendedData, props: ChartProps) {\n  return data.map((dataEntry, index) => {\n    const segmentsShift = functionProp(props.segmentsShift, index) ?? 0;\n    const distanceFromCenter =\n      extractPercentage(props.radius, props.labelPosition) + segmentsShift;\n    const { dx, dy } = shiftVectorAlongAngle(\n      bisectorAngle(dataEntry.startAngle, dataEntry.degrees),\n      distanceFromCenter\n    );\n\n    // This object is passed as argument to the \"label\" function prop\n    const labelRenderProps = {\n      x: props.center[0],\n      y: props.center[1],\n      dx,\n      dy,\n      textAnchor: evaluateTextAnchorPosition({\n        labelPosition: props.labelPosition,\n        lineWidth: props.lineWidth,\n        labelHorizontalShift: dx,\n      }),\n      dataEntry,\n      dataIndex: index,\n      style: functionProp(props.labelStyle, index),\n    };\n\n    return props.label && renderLabelElement(props.label, labelRenderProps);\n  });\n}\n","'use strict'\n\n// from http://stackoverflow.com/a/18473154\nconst partialCircle = (cx, cy, r, start, end) => {\n\tconst length = end - start\n\tif (length === 0) return []\n\n\tconst fromX = r * Math.cos(start) + cx\n\tconst fromY = r * Math.sin(start) + cy\n\tconst toX = r * Math.cos(end) + cx\n\tconst toY = r * Math.sin(end) + cy\n\tconst large = Math.abs(length) <= Math.PI ? '0' : '1'\n\tconst sweep = length < 0 ? '0' : '1'\n\n\treturn [\n\t\t['M', fromX, fromY],\n\t\t['A', r, r, 0, large, sweep, toX, toY]\n\t]\n}\n\nmodule.exports = partialCircle\n","import React from 'react';\nimport type { SVGProps } from 'react';\nimport partialCircle from 'svg-partial-circle';\nimport {\n  bisectorAngle,\n  degreesToRadians,\n  extractPercentage,\n  isNumber,\n  shiftVectorAlongAngle,\n  valueBetween,\n} from './utils';\n\nexport function makePathCommands(\n  cx: number,\n  cy: number,\n  startAngle: number,\n  lengthAngle: number,\n  radius: number\n): string {\n  const patchedLengthAngle = valueBetween(lengthAngle, -359.999, 359.999);\n\n  return partialCircle(\n    cx,\n    cy, // center X and Y\n    radius,\n    degreesToRadians(startAngle),\n    degreesToRadians(startAngle + patchedLengthAngle)\n  )\n    .map((command) => command.join(' '))\n    .join(' ');\n}\n\ntype Props = SVGProps<SVGPathElement> & {\n  cx: number;\n  cy: number;\n  lengthAngle: number;\n  lineWidth: number;\n  radius: number;\n  reveal?: number;\n  rounded?: boolean;\n  shift?: number;\n  startAngle: number;\n  title?: string | number;\n};\n\nexport default function ReactMinimalPieChartPath({\n  cx,\n  cy,\n  lengthAngle,\n  lineWidth,\n  radius,\n  shift = 0,\n  reveal,\n  rounded,\n  startAngle,\n  title,\n  ...props\n}: Props) {\n  const pathRadius = radius - lineWidth / 2;\n  //@NOTE This shift might be rendered as a translation in future\n  const { dx, dy } = shiftVectorAlongAngle(\n    bisectorAngle(startAngle, lengthAngle),\n    shift\n  );\n\n  const pathCommands = makePathCommands(\n    cx + dx,\n    cy + dy,\n    startAngle,\n    lengthAngle,\n    pathRadius\n  );\n  let strokeDasharray;\n  let strokeDashoffset;\n\n  // Animate/hide paths with \"stroke-dasharray\" + \"stroke-dashoffset\"\n  // https://css-tricks.com/svg-line-animation-works/\n  if (isNumber(reveal)) {\n    const pathLength = degreesToRadians(pathRadius) * lengthAngle;\n    strokeDasharray = Math.abs(pathLength);\n    strokeDashoffset =\n      strokeDasharray - extractPercentage(strokeDasharray, reveal);\n  }\n\n  return (\n    <path\n      d={pathCommands}\n      fill=\"none\"\n      strokeWidth={lineWidth}\n      strokeDasharray={strokeDasharray}\n      strokeDashoffset={strokeDashoffset}\n      strokeLinecap={rounded ? 'round' : undefined}\n      {...props}\n    >\n      {title && <title>{title}</title>}\n    </path>\n  );\n}\n","import React from 'react';\nimport type { CSSProperties } from 'react';\nimport Path from '../Path';\nimport { extractPercentage, functionProp, isNumber } from '../utils';\nimport type { ExtendedData } from '../commonTypes';\nimport type { PropsWithDefaults as ChartProps } from './Chart';\n\nfunction combineSegmentTransitionsStyle(\n  duration: number,\n  easing: string,\n  customStyle?: CSSProperties\n): { transition: string } {\n  // Merge chart's animation CSS transition with \"transition\" found to customStyle\n  let transition = `stroke-dashoffset ${duration}ms ${easing}`;\n  if (customStyle && customStyle.transition) {\n    transition = `${transition},${customStyle.transition}`;\n  }\n  return {\n    transition,\n  };\n}\n\nfunction getRevealValue<Reveal>(props: { reveal?: Reveal; animate?: boolean }) {\n  //@NOTE When animation is on, chart has to be fully revealed when reveal is not set\n  if (props.animate && !isNumber(props.reveal)) {\n    return 100;\n  }\n  return props.reveal;\n}\n\nfunction makeEventHandler<Event, EventHandler, Payload>(\n  eventHandler: undefined | (EventHandler & Function),\n  payload: Payload\n) {\n  return (\n    eventHandler &&\n    ((e: Event) => {\n      eventHandler(e, payload);\n    })\n  );\n}\n\nexport default function renderSegments(\n  data: ExtendedData,\n  props: ChartProps,\n  revealOverride?: null | number\n) {\n  // @NOTE this should go in Path component. Here for performance reasons\n  const reveal = revealOverride ?? getRevealValue(props);\n  const {\n    radius,\n    center: [cx, cy],\n  } = props;\n  const lineWidth = extractPercentage(radius, props.lineWidth);\n  const paths = data.map((dataEntry, index) => {\n    const segmentsStyle = functionProp(props.segmentsStyle, index);\n    return (\n      <Path\n        cx={cx}\n        cy={cy}\n        key={dataEntry.key || index}\n        lengthAngle={dataEntry.degrees}\n        lineWidth={lineWidth}\n        radius={radius}\n        rounded={props.rounded}\n        reveal={reveal}\n        shift={functionProp(props.segmentsShift, index)}\n        startAngle={dataEntry.startAngle}\n        title={dataEntry.title}\n        style={Object.assign(\n          {},\n          segmentsStyle,\n          props.animate &&\n            combineSegmentTransitionsStyle(\n              props.animationDuration,\n              props.animationEasing,\n              segmentsStyle\n            )\n        )}\n        stroke={dataEntry.color}\n        tabIndex={props.segmentsTabIndex}\n        onBlur={makeEventHandler(props.onBlur, index)}\n        onClick={makeEventHandler(props.onClick, index)}\n        onFocus={makeEventHandler(props.onFocus, index)}\n        onKeyDown={makeEventHandler(props.onKeyDown, index)}\n        onMouseOver={makeEventHandler(props.onMouseOver, index)}\n        onMouseOut={makeEventHandler(props.onMouseOut, index)}\n      />\n    );\n  });\n\n  if (props.background) {\n    paths.unshift(\n      <Path\n        cx={cx}\n        cy={cy}\n        key=\"bg\"\n        lengthAngle={props.lengthAngle}\n        lineWidth={lineWidth}\n        radius={radius}\n        rounded={props.rounded}\n        startAngle={props.startAngle}\n        stroke={props.background}\n      />\n    );\n  }\n\n  return paths;\n}\n","import React, { useState, useEffect } from 'react';\nimport type {\n  CSSProperties,\n  FocusEvent,\n  KeyboardEvent,\n  MouseEvent,\n  ReactNode,\n} from 'react';\nimport extendData from './extendData';\nimport renderLabels from './renderLabels';\nimport renderSegments from './renderSegments';\nimport type { Data, EventHandler, LabelRenderFunction } from '../commonTypes';\n\ntype Props = {\n  animate?: boolean;\n  animationDuration?: number;\n  animationEasing?: string;\n  background?: string;\n  center?: [number, number];\n  children?: ReactNode;\n  className?: string;\n  data: Data;\n  lengthAngle?: number;\n  lineWidth?: number;\n  label?: LabelRenderFunction;\n  labelPosition?: number;\n  labelStyle?:\n    | CSSProperties\n    | ((dataIndex: number) => CSSProperties | undefined);\n  onBlur?: EventHandler<FocusEvent>;\n  onClick?: EventHandler<MouseEvent>;\n  onFocus?: EventHandler<FocusEvent>;\n  onKeyDown?: EventHandler<KeyboardEvent>;\n  onMouseOut?: EventHandler<MouseEvent>;\n  onMouseOver?: EventHandler<MouseEvent>;\n  paddingAngle?: number;\n  radius?: number;\n  reveal?: number;\n  rounded?: boolean;\n  segmentsShift?: number | ((dataIndex: number) => number | undefined);\n  segmentsStyle?:\n    | CSSProperties\n    | ((dataIndex: number) => CSSProperties | undefined);\n  segmentsTabIndex?: number;\n  startAngle?: number;\n  style?: CSSProperties;\n  totalValue?: number;\n  viewBoxSize?: [number, number];\n};\n\nconst defaultProps = {\n  animationDuration: 500,\n  animationEasing: 'ease-out',\n  center: [50, 50] as [number, number],\n  data: [] as Data,\n  labelPosition: 50,\n  lengthAngle: 360,\n  lineWidth: 100,\n  paddingAngle: 0,\n  radius: 50,\n  startAngle: 0,\n  viewBoxSize: [100, 100] as [number, number],\n};\n\nexport type PropsWithDefaults = Props & typeof defaultProps;\n\nexport function ReactMinimalPieChart(props: PropsWithDefaults) {\n  const [revealOverride, setRevealOverride] = useState(\n    props.animate ? 0 : null\n  );\n  useEffect(() => {\n    if (props.animate) {\n      return startInitialAnimation();\n    }\n\n    function startInitialAnimation() {\n      let animationTimerId: NodeJS.Timeout | null;\n      let animationRAFId: number | null;\n      animationTimerId = setTimeout(() => {\n        animationTimerId = null;\n        animationRAFId = requestAnimationFrame(() => {\n          animationRAFId = null;\n          setRevealOverride(null); // Start animation\n        });\n      });\n\n      return () => {\n        animationTimerId && clearTimeout(animationTimerId);\n        animationRAFId && cancelAnimationFrame(animationRAFId);\n      };\n    }\n  }, []);\n\n  const extendedData = extendData(props);\n  return (\n    <svg\n      viewBox={`0 0 ${props.viewBoxSize[0]} ${props.viewBoxSize[1]}`}\n      width=\"100%\"\n      height=\"100%\"\n      className={props.className}\n      style={props.style}\n    >\n      {renderSegments(extendedData, props, revealOverride)}\n      {props.label && renderLabels(extendedData, props)}\n      {props.children}\n    </svg>\n  );\n}\n\nReactMinimalPieChart.defaultProps = defaultProps;\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["props","useState","data","setData","Stats","setStats","Index","setIndex","Buys","setBuys","Sells","setSells","Transfers","setTransfers","useEffect","console","log","Tracker","Wallet","Diagram","BuysAmount","push","title","value","color","SellsAmount","Reflections","temp","Data","className","toString","Balance","replace","Value","MarketShare","Position","ReflectionsValue","Spent","CostAvg","Gains","prev","ComputeBuys","BuysArray","ComputeSells","SellsArray","ComputeTransfers","TransfersArray","Currency","transactionstemp","monthtemp","monthtemp2","i","length","dateTime","includes","split","month","Style","To","From","ConvertInt","parseInt","Safemoonv2","parseFloat","Price","toFixed","USD","Link","Hash","buystemp","sellstemp","Loading","Loader","Text","Metric","Table","TableID","Address","Headers","TableData","TableStyle","PieChart","radius","startAngle","label","dataEntry","labelStyle","fontSize","fontFamily","fill","animate","TableLink","loading","setLoading","setWallet","Activated","setActivated","Error","setError","Message","setMessage","setTracker","setCurrency","CombinedTracker","JSON","parse","localStorage","getItem","setItem","stringify","Rate","wallet","UpdateWallet","Wallets","e","prevValue","toUpperCase","Values","substring","toLowerCase","ErrorMessage","TransactionCategorization","Direction","Type","State","GetData","PriceArray","Axios","then","results","PrepPrice","Prices","result","ProccessData","Itteration","WorkerWallet","TrackerTemp","holder","num_row","CSupply","Spend","BuyAmount","SellAmount","BuysArr","SellsArr","TransfersArr","CategorizeV1","V1","arr","CategorizeV2","V2","Prices2","Calculations","date","hisPrice","price","createdAt","Date","snapped_at","toLocaleDateString","Promise","resolve","complete","LoggedPrices","Transaction","Amount","timeStamp","SafemoonAmount","SafemoonAmountv2","hash","Safemoon","from","to","Categorization","snappedDate","toLocaleString","hour12","WalletsArray","TransferBalance","Transfer","shift","setTimeout","ComputeCombined","TotaledStats","BuysLength","SellsLength","Main","Grid","GridBox","Input","Title","PlaceHolder","isActivated","OnClickFunction","ButtonText","SetValue","map","x","onClick","n","switchIndex","setTableData","setTableDataVertical","TableDataVertical","handleCaptureClick","useCallback","html2canvas","document","getElementById","canvas","dataURL","toDataURL","downloadjs","getTime","ID","Header","DataRows","colSpan","ReactDOM","id","setTableDataLink","setTableDataVerticalLink","href","target","NewPage","rel","degreesToRadians","degrees","Math","PI","valueBetween","min","max","extractPercentage","percentage","bisectorAngle","lengthAngle","shiftVectorAlongAngle","angle","distance","angleRadians","dx","cos","dy","sin","isNumber","functionProp","prop","payload","sumValues","sum","extendData","totalAngle","totalValue","paddingAngle","chartStartAngle","total","normalizedTotalAngle","numberOfPaddings","abs","singlePaddingDegrees","sign","degreesTakenByPaths","lastSegmentEnd","extendedData","valueInPercentage","Object","assign","ReactMinimalPieChartLabel","_ref","dataIndex","React","dominantBaseline","round","number","divisor","Number","EPSILON","evaluateTextAnchorPosition","labelPosition","lineWidth","labelHorizontalShift","renderLabelElement","renderLabel","labelProps","DefaultLabel","key","isValidElement","renderLabels","index","segmentsShift","distanceFromCenter","labelRenderProps","center","y","textAnchor","style","module","cx","cy","r","start","end","fromX","fromY","toX","toY","makePathCommands","patchedLengthAngle","partialCircle","command","join","ReactMinimalPieChartPath","strokeDasharray","strokeDashoffset","reveal","rounded","pathRadius","pathCommands","pathLength","d","strokeWidth","strokeLinecap","undefined","combineSegmentTransitionsStyle","duration","easing","customStyle","transition","getRevealValue","makeEventHandler","eventHandler","renderSegments","revealOverride","paths","segmentsStyle","Path","animationDuration","animationEasing","stroke","tabIndex","segmentsTabIndex","onBlur","onFocus","onKeyDown","onMouseOver","onMouseOut","background","unshift","defaultProps","viewBoxSize","ReactMinimalPieChart","setRevealOverride","startInitialAnimation","animationTimerId","animationRAFId","requestAnimationFrame","clearTimeout","cancelAnimationFrame","viewBox","width","height","children","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","F","s","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2"],"sourceRoot":""}