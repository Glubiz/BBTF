{"version":3,"file":"static/js/16.a3a6770d.chunk.js","mappings":"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","sources":["components/Table/AllHolders.js","components/Table/Holder.js","components/Table/HolderTransactions.js","Pages/Holders.js","components/Table/TableLink.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Axios} from '../Shared/Axios'\n\nimport Table from './TableLink'\nimport Loader from '../UI/Loader'\nimport {ConvertInt} from './../Shared/ConvertInt'\n\n\nimport {SafemoonV2Settings} from '../Shared/SafemoonV2Settings';\n\nconst AllHolders = (props) => {\n    const [isBusy, setBusy] = useState(true)\n    const [Data, setData] = useState([])\n\n    const [page, setPage] = useState(props.page)\n\n    useEffect(() => {\n        \n        if (page > 0) {\n            Axios('/api/PaginatedHolders', {page : page})\n            .then(response => {\n                var temp = []\n                for (let Holder of response){\n                    \n                    Holder.Balance = ConvertInt(Holder.Balance)\n\n                    var Style = \"\"\n                    if (Holder.Address !== findWalletName(Holder.Address)){\n                        Style = \"Positiv\"\n                    }\n                    temp.push({Data: [\n                        Holder.num_row,\n                        findWalletName(Holder.Address),\n                        Holder.Balance\n                    ], \n                    Link: \"/Holders/\" + Holder.Address,\n                    NewPage: false,\n                    Style: Style\n                })\n                }\n                setData(temp);\n                setBusy(false);\n            })\n        }\n    }, [page]);\n\n    const pageDown = () => {\n        let newPage = (parseInt(page) - 1).toString();\n        setBusy(true);\n        setPage(newPage);\n    }\n\n    const pageUp = () => {\n        let newPage = (parseInt(page) + 1).toString();\n        setBusy(true);\n        setPage(newPage);\n    }\n\n    const switchpage = () => {\n        setBusy(true);\n        setPage(document.querySelector(\"#page\").value);\n    }\n\n    const findWalletName = (address) => {\n        for (let name in SafemoonV2Settings.walletNames) {\n            if (SafemoonV2Settings.walletNames[name].includes(address)) {\n                return name;\n            }\n        }\n\n        return address;\n    };\n\n    return (\n        <div className=\"big-container\">\n            <h2>Holders</h2>\n            {!isBusy ? <Table \n                TableID=\"Holders\"\n                Headers={[\"#\", \"Hash\", \"Balance\"]}\n                TableData={Data}\n                TableStyle=\"Horizontal\"\n            /> : <Loader />}\n            <div className=\"pageNav\">\n                <div className=\"pageNav-button\" onClick={pageDown}>\n                    &larr;\n                </div>\n                <div>\n                    <input type=\"number\" id=\"page\" min=\"1\" value={page} step=\"1\" onChange={switchpage} required/>\n                </div>\n                <div className=\"pageNav-button\" onClick={pageUp}>\n                    &rarr;\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AllHolders\n","import React, {useEffect, useState} from 'react'\nimport {useLocation} from 'react-router-dom'\nimport {Axios} from '../Shared/Axios'\nimport Table from './Table'\nimport Loader from './../UI/Loader'\nimport {SafemoonV2Settings} from '../Shared/SafemoonV2Settings';\n\n\nconst Holder = () => {\n    const [Data, setData] = useState([])\n\n    const location = useLocation();\n    const {pathname} = location;\n    const splitLocation = pathname.split(\"/\");\n\n    useEffect(() => {\n        var Position\n        Axios('/api/HolderData', {Address: splitLocation[2]})\n        .then(response => {\n            console.log(response)\n            if(response.Position[0]){\n                Position = {Data: ['Position', response.Position[0].num_row.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" / \" + response.TotalHolders.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")]}\n            } else {\n                Position = {Data: ['Wallet Type', findWalletName(splitLocation[2])]}\n            }\n            setData(prev => prev = [\n                {Data: [<a href={\"/Holders/\"} rel=\"noreferrer\">Back To Holders</a>]},\n                {Data: ['Address', splitLocation[2]]},\n                {Data: ['Balance', response.Balance.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" SFM\"]},\n                Position,\n                {Data: [<a href={\"https://bscscan.com/address/\" + splitLocation[2]} target=\"_blank\" rel=\"noreferrer\">To BSCScan</a>]},\n            ])\n        })\n    }, [])\n\n    const findWalletName = (address) => {\n        for (let name in SafemoonV2Settings.walletNames) {\n            if (SafemoonV2Settings.walletNames[name].includes(address)) {\n                return name;\n            }\n        }\n        return address;\n    };\n\n    return(\n        <div>\n            {Data.length > 0 ? <Table\n                TableID={splitLocation[2]}\n                Headers={[\"\", \"\"]}\n                TableData={Data}\n                TableStyle=\"Horizontal\"\n            /> : <Loader />}\n        </div>\n    )\n}\n\nexport default Holder","import React, {useEffect, useState} from 'react'\nimport {useLocation} from 'react-router-dom'\nimport {Axios} from '../Shared/Axios'\n\nimport Table from './TableLink'\nimport Loader from './../UI/Loader'\nimport {ConvertInt} from './../Shared/ConvertInt'\n\n\nconst HolderTransactions = () => {\n    const [Loading, setLoading] = useState(true)\n    const [Buys, setBuys] = useState([])\n    const [Sells, setSells] = useState([])\n    const [Transfers, setTransfers] = useState([])\n\n    const location = useLocation();\n    const {pathname} = location;\n    const splitLocation = pathname.split(\"/\");\n\n    useEffect(() => {\n        Axios('/api/HolderTransactions', {Address: splitLocation[2]})\n        .then(async response => {\n            var Arr = {Buys: [], Sells: [], Transfers: []}\n\n            await Safemoon(response.V1)\n            .then(arr => {\n                console.log(arr)\n                Arr.Buys = [...Arr.Buys, ...arr.Buys]\n                Arr.Sells = [...Arr.Sells, ...arr.Sells]\n                Arr.Transfers = [...Arr.Transfers, ...arr.Transfers]\n            })\n            await SafemoonV2(response.V2)\n            .then(arr => {\n                console.log(arr)\n                Arr.Buys = [...Arr.Buys, ...arr.Buys]\n                Arr.Sells = [...Arr.Sells, ...arr.Sells]\n                Arr.Transfers = [...Arr.Transfers, ...arr.Transfers]\n            })\n            ArrangeData(Arr)\n        })\n        .catch(err => console.log(err))\n    }, [])\n\n    const TransactionCategorization = (Value) => {\n        let temp = {\n            Direction : '',\n            Type : ''\n        }\n        \n        Value = JSON.parse(Value)\n\n        //Buy\n        if(Value.To === splitLocation[2].toLowerCase()){\n            temp.Direction = 'In'\n            if (\n                //BitMart\n                Value.From === '0x328130164d0f2b9d7a52edc73b3632e713ff0ec6' ||\n                //WhiteBit\n                Value.From === '0x33eac50b7faf4b8842a621d0475335693f5d21fe' ||\n                //Gate IO\n                Value.From === '0x0d0707963952f2fba59dd06f2b425ace40b492fe' ||\n                //HotBit\n                Value.From === '0xc7029e939075f48fa2d5953381660c7d01570171' ||\n                //MEXC\n                Value.From === '0x4982085c9e2f89f2ecb8131eca71afad896e89cb' ||\n                //HotBit\n                Value.From === '0xc7029e939075f48fa2d5953381660c7d01570171' ||\n                //BitTrue\n                Value.From === '0x868f027a5e3bd1cd29606a6681c3ddb7d3dd9b67' ||\n                //Mandala\n                Value.From === '0x8894e0a0c962cb723c1976a4421c95949be2d4e3' ||\n                //BIKI\n                Value.From === '0x3fdf750fb555583374b26a5ff476abbd7f6e6fb5' ||\n                //BIKI\n                Value.From === '0x87067ddcfddf4c6790207132848cfbbe5cd6f939' ||\n                //LBank\n                Value.From === '0x124d9bf2fecbc16b54ec4accdb14d44c2144f012' ||\n                //ZGB\n                Value.From === '0x8af8f4df5c463db7ab24ec66cee7546c9a310f56' ||\n                //BitForex\n                Value.From === '0x3a723e58c4808dde4591543282adc7d6b378715b' ||\n                //Decoin\n                Value.From === '0x2c6cc8e98adc0b3f3505c29d63fcdd76ac0e2ba4' ||\n                //Quidax\n                Value.From === '0x7d7fc48fc930552957dc585726d9628f5319c038'\n            ) {\n                temp.Type = 'CEX'\n            } else if (\n                //LP Providers\n                Value.From === '0x8c128dba2cb66399341aa877315be1054be75da8' ||\n                //LP Providers\n                Value.From === '0xff3dd404afba451328de089424c74685bf0a43c9' ||\n                //LP Providers\n                Value.From === '0x79c4af7c43f500b9ccba9396d079cc03dfcafda1' ||\n                //LP Providers\n                Value.From === '0x9eca52d3b9ec0cc2f2d62c0dba155952ae6d57d2' ||\n                //LP Providers\n                Value.From === '0x391c9d82af4edd7d3ec23cefabf9a35b630b3a7a' ||\n                //LP Providers\n                Value.From === '0xd11616e66b128c0b756b91cc13466defaae67d07' ||\n                //Swap LP\n                Value.From === '0x856a1c95bef293de7367b908df2b63ba30fbdd59' ||\n                //Swap LP\n                Value.From === '0xe804f3c3e6dda8159055428848fe6f2a91c2b9af' ||\n                // Swap LP\n                Value.From === '0xa8736b9585a01d6dcc1b6e2fc9dc208552c34b58' ||\n                // Swap LP\n                Value.From === '0x8fb9bbfd97fff7bba69c0162a9632c9503b29cd4' ||\n                //Pancake Swap\n                Value.From === '0x9adc6fb78cefa07e13e9294f150c1e8c1dd566c0' ||\n                //Pancake Swap\n                Value.From === '0x87d7fd8c446cb5d3da3ca23f429e7b7504d1931c' ||\n                //Pancake Swap\n                Value.From === '0xe2f99ab0a62b72773b6eac227f9b9c161494e8a9' ||\n                //Pancake Swap\n                Value.From === '0x29e99847a4f968372cf573a7965e2ad954cb0cbc' ||\n                //Pancake Swap\n                Value.From === '0xef967e3da982ecc1c84bbe6053fd61af2a65bb9a' ||\n                //?\n                Value.From === '0x2ad2c5314028897aecfcf37fd923c079beeb2c56'\n            ){\n                temp.Type = 'Buy'\n            } else if (\n                //Migration\n                Value.From === '0x678ee23173dce625a90ed651e91ca5138149f590'\n            ) {\n                temp.Type = 'Migration'\n            } else {\n                temp.Type = 'Transfer'\n            }\n        //Sell\n        } else {\n            temp.Direction = 'Out'\n            if(Value.To === '0xefecd68f9549d47cbeca0a2fd9bd09cf4ec6a5d6'){\n                temp.Type = 'Growth Fund'\n            } else if (Value.To === '0x42981d0bfbaf196529376ee702f2a9eb9092fcb5' && Value.State === 'V2'){\n                temp.Type = 'LP'\n            } else if (Value.To === '0x0000000000000000000000000000000000000001'){\n                temp.Type = 'Burn'\n            } else if (\n                //BitMart\n                Value.To === '0x328130164d0f2b9d7a52edc73b3632e713ff0ec6' ||\n                //WhiteBit\n                Value.To === '0x33eac50b7faf4b8842a621d0475335693f5d21fe' ||\n                //Gate IO\n                Value.To === '0x0d0707963952f2fba59dd06f2b425ace40b492fe' ||\n                //HotBit\n                Value.To === '0xc7029e939075f48fa2d5953381660c7d01570171' ||\n                //MEXC\n                Value.To === '0x4982085c9e2f89f2ecb8131eca71afad896e89cb' ||\n                //HotBit\n                Value.To === '0xc7029e939075f48fa2d5953381660c7d01570171' ||\n                //BitTrue\n                Value.To === '0x868f027a5e3bd1cd29606a6681c3ddb7d3dd9b67' ||\n                //Mandala\n                Value.To === '0x8894e0a0c962cb723c1976a4421c95949be2d4e3' ||\n                //BIKI\n                Value.To === '0x3fdf750fb555583374b26a5ff476abbd7f6e6fb5' ||\n                //BIKI\n                Value.To === '0x87067ddcfddf4c6790207132848cfbbe5cd6f939' ||\n                //LBank\n                Value.To === '0x124d9bf2fecbc16b54ec4accdb14d44c2144f012' ||\n                //ZGB\n                Value.To === '0x8af8f4df5c463db7ab24ec66cee7546c9a310f56' ||\n                //BitForex\n                Value.To === '0x3a723e58c4808dde4591543282adc7d6b378715b' ||\n                //Decoin\n                Value.To === '0x2c6cc8e98adc0b3f3505c29d63fcdd76ac0e2ba4' ||\n                //Quidax\n                Value.To === '0x7d7fc48fc930552957dc585726d9628f5319c038'\n            ) {\n                temp.Type = 'CEX'\n            } else if (\n                //LP Providers\n                Value.To === '0x8c128dba2cb66399341aa877315be1054be75da8' ||\n                //LP Providers\n                Value.To === '0xff3dd404afba451328de089424c74685bf0a43c9' ||\n                //LP Providers\n                Value.To === '0x79c4af7c43f500b9ccba9396d079cc03dfcafda1' ||\n                //LP Providers\n                Value.To === '0x9eca52d3b9ec0cc2f2d62c0dba155952ae6d57d2' ||\n                //LP Providers\n                Value.To === '0x391c9d82af4edd7d3ec23cefabf9a35b630b3a7a' ||\n                //LP Providers\n                Value.To === '0xd11616e66b128c0b756b91cc13466defaae67d07' ||\n                //Swap LP\n                Value.To === '0x856a1c95bef293de7367b908df2b63ba30fbdd59' ||\n                //Swap LP\n                Value.To === '0xe804f3c3e6dda8159055428848fe6f2a91c2b9af' ||\n                // Swap LP\n                Value.To === '0xa8736b9585a01d6dcc1b6e2fc9dc208552c34b58' ||\n                // Swap LP\n                Value.To === '0x8fb9bbfd97fff7bba69c0162a9632c9503b29cd4' ||\n                //Pancake Swap\n                Value.To === '0x9adc6fb78cefa07e13e9294f150c1e8c1dd566c0' ||\n                //Pancake Swap\n                Value.To === '0x87d7fd8c446cb5d3da3ca23f429e7b7504d1931c' ||\n                //Pancake Swap\n                Value.To === '0xe2f99ab0a62b72773b6eac227f9b9c161494e8a9' ||\n                //Pancake Swap\n                Value.To === '0x29e99847a4f968372cf573a7965e2ad954cb0cbc' ||\n                //Pancake Swap\n                Value.To === '0xef967e3da982ecc1c84bbe6053fd61af2a65bb9a' ||\n                //?\n                Value.To === '0x2ad2c5314028897aecfcf37fd923c079beeb2c56'\n            ){\n                temp.Type = 'Sell'\n            } else if (\n                //Migration\n                Value.To === '0x42981d0bfbaf196529376ee702f2a9eb9092fcb5' ||\n                //Migration\n                Value.To === '0x9d50518de14f89836f2b9b9ac05f177de7bf521a'\n            ) {\n                temp.Type = 'Migration'\n            } else {\n                temp.Type = 'Transfer'\n            }\n        }\n        return temp\n    }\n\n    const Safemoon = (Transactions) => {\n        console.log(Transactions)\n        var complete = {Buys: [], Transfers: [], Sells: []}\n\n        for(let Transaction of Transactions) {\n\n            var Amount = parseInt(Transaction.value / 1000000000000)\n\n            var date = new Date(Transaction.timeStamp * 1000);\n                date = date.toLocaleDateString()\n\n\n            var temp = {Hash: Transaction.hash, dateTime: date, Amount: Amount, Type: 0, From: Transaction.from, To: Transaction.to}\n\n            var Categorization = TransactionCategorization(JSON.stringify({To : Transaction.to, From : Transaction.from, State : 'V1'}))\n            temp.Type = Categorization\n            console.log(temp)\n\n            if(\n                Categorization.Type === 'Transfer' ||\n                Categorization.Type === 'Migration' || \n                Categorization.Type === 'Growth Fund' || \n                Categorization.Type === 'Burn' || \n                Categorization.Type === 'LP' || \n                Categorization.Type === 'CEX'\n            ){\n                Categorization.Type === 'Migration' && (temp.Amount = parseInt((Amount / 90) * 100))\n                complete.Transfers.push(temp)\n            } else if (Categorization.Type === 'Buy'){\n                complete.Buys.push(temp)\n            } else if (Categorization.Type === 'Sell'){\n                temp.Amount = parseInt((Amount / 90) * 100)\n                complete.Sells.push(temp)\n            }\n        }\n        return new Promise((resolve) => {\n            resolve(complete)\n        });\n    }\n\n    const SafemoonV2 = (Transactions) => {\n        var complete = {Buys: [], Transfers: [], Sells: []}\n\n        for(let Transaction of Transactions) {\n            var Amount = parseInt(Transaction.value / 1000000000)\n\n            var date = new Date(Transaction.timeStamp * 1000);\n                date = date.toLocaleDateString()\n\n\n            var temp = {Hash: Transaction.hash, dateTime: date, Amount: Amount, Type: 0, From: Transaction.from, To: Transaction.to}\n\n            var Categorization = TransactionCategorization(JSON.stringify({To : Transaction.to, From : Transaction.from, State : 'V2'}))\n            temp.Type = Categorization\n\n            if(\n                Categorization.Type === 'Transfer' ||\n                Categorization.Type === 'Migration' || \n                Categorization.Type === 'Growth Fund' || \n                Categorization.Type === 'Burn' || \n                Categorization.Type === 'LP' || \n                Categorization.Type === 'CEX'\n            ){\n                complete.Transfers.push(temp)\n            } else if (Categorization.Type === 'Buy'){\n                complete.Buys.push(temp)\n            } else if (Categorization.Type === 'Sell'){\n                complete.Sells.push(temp)\n            }\n        }\n        return new Promise((resolve) => {\n            resolve(complete)\n        });\n    }\n\n    const ArrangeData = (Array) => {\n        console.log(Array)\n        //Preparing data for Buys Table\n        var buystemp = [] \n        var monthtemp = \"\"\n        var monthtemp2 = \"\" \n        for (let i = Array.Buys.length - 1; i >= 0; i--) {\n            if(Array.Buys[i].dateTime.toString().includes(\".\")){\n                if(Array.Buys[i].dateTime.toString().split(\".\")[1] !== monthtemp){\n                    monthtemp = Array.Buys[i].dateTime.toString().split(\".\")[1]\n                    let month\n                    if(monthtemp === \"1\"){\n                        month = \"January\"\n                    } else if(monthtemp === \"2\") {\n                        month = \"February\"\n                    } else if(monthtemp === \"3\") {\n                        month = \"March\"\n                    } else if(monthtemp === \"4\") {\n                        month = \"April\"\n                    } else if(monthtemp === \"5\") {\n                        month = \"May\"\n                    } else if(monthtemp === \"6\") {\n                        month = \"June\"\n                    } else if(monthtemp === \"7\") {\n                        month = \"July\"\n                    } else if(monthtemp === \"8\") {\n                        month = \"August\"\n                    } else if(monthtemp === \"9\") {\n                        month = \"September\"\n                    } else if(monthtemp === \"10\") {\n                        month = \"October\"\n                    } else if(monthtemp === \"11\") {\n                        month = \"November\"\n                    } else if(monthtemp === \"12\") {\n                        month = \"December\"\n                    }\n                    buystemp.push({\n                        Data: [\n                            <h2 className=\"table__data__header\">{month + \" \" + Array.Buys[i].dateTime.toString().split(\".\")[2]}</h2>\n                        ],\n                    })\n                }\n            } else {\n                if(Array.Buys[i].dateTime.toString().split(\" \")[1] !== monthtemp2){\n                    if(Array.Buys[i].dateTime.toString().split(\" \")[1] === \"Jan\"){\n                        monthtemp = \"1\"\n                    } else if(Array.Buys[i].dateTime.toString().split(\" \")[1] === \"Feb\") {\n                        monthtemp = \"2\"\n                    } else if(Array.Buys[i].dateTime.toString().split(\" \")[1] === \"Mar\") {\n                        monthtemp = \"3\"\n                    } else if(Array.Buys[i].dateTime.toString().split(\" \")[1] === \"Apr\") {\n                        monthtemp = \"4\"\n                    } else if(Array.Buys[i].dateTime.toString().split(\" \")[1] === \"May\") {\n                        monthtemp = \"5\"\n                    } else if(Array.Buys[i].dateTime.toString().split(\" \")[1] === \"Jun\") {\n                        monthtemp = \"6\"\n                    } else if(Array.Buys[i].dateTime.toString().split(\" \")[1] === \"Jul\") {\n                        monthtemp = \"7\"\n                    } else if(Array.Buys[i].dateTime.toString().split(\" \")[1] === \"Aug\") {\n                        monthtemp = \"8\"\n                    } else if(Array.Buys[i].dateTime.toString().split(\" \")[1] === \"Sep\") {\n                        monthtemp = \"9\"\n                    } else if(Array.Buys[i].dateTime.toString().split(\" \")[1] === \"Oct\") {\n                        monthtemp = \"10\"\n                    } else if(Array.Buys[i].dateTime.toString().split(\" \")[1] === \"Nov\") {\n                        monthtemp = \"11\"\n                    } else if(Array.Buys[i].dateTime.toString().split(\" \")[1] === \"Dec\") {\n                        monthtemp = \"12\"\n                    }\n                    \n                    monthtemp2 = Array.Buys[i].dateTime.toString().split(\" \")[1]\n                    let month\n                    if(monthtemp === \"1\"){\n                        month = \"January\"\n                    } else if(monthtemp === \"2\") {\n                        month = \"February\"\n                    } else if(monthtemp === \"3\") {\n                        month = \"March\"\n                    } else if(monthtemp === \"4\") {\n                        month = \"April\"\n                    } else if(monthtemp === \"5\") {\n                        month = \"May\"\n                    } else if(monthtemp === \"6\") {\n                        month = \"June\"\n                    } else if(monthtemp === \"7\") {\n                        month = \"July\"\n                    } else if(monthtemp === \"8\") {\n                        month = \"August\"\n                    } else if(monthtemp === \"9\") {\n                        month = \"September\"\n                    } else if(monthtemp === \"10\") {\n                        month = \"October\"\n                    } else if(monthtemp === \"11\") {\n                        month = \"November\"\n                    } else if(monthtemp === \"12\") {\n                        month = \"December\"\n                    }\n                    buystemp.push({\n                        Data: [\n                            <h2 className=\"table__data__header\">{month + \" \" + Array.Buys[i].dateTime.toString().split(\" \")[3]}</h2>\n                        ],\n                    })\n                }\n            }\n            buystemp.push({\n                Data: [\n                    Array.Buys[i].From.substring(0,6) + \"...\",\n                    Array.Buys[i].To.substring(0,6) + \"...\",\n                    ConvertInt(Array.Buys[i].Amount),\n                    Array.Buys[i].dateTime,\n                ],\n                Link: \"https://bscscan.com/tx/\" + Array.Buys[i].Hash\n            })\n        }\n        setBuys(prev => prev = buystemp)\n\n        //Preparing data for Sells Table \n        var sellstemp = [] \n        monthtemp = \"\"\n        monthtemp2 = \"\" \n        for (let i = Array.Sells.length - 1; i >= 0; i--) {\n            if(Array.Sells[i].dateTime.toString().includes(\".\")){\n                if(Array.Sells[i].dateTime.toString().split(\".\")[1] !== monthtemp){\n                    monthtemp = Array.Sells[i].dateTime.toString().split(\".\")[1]\n                    let month\n                    if(monthtemp === \"1\"){\n                        month = \"January\"\n                    } else if(monthtemp === \"2\") {\n                        month = \"February\"\n                    } else if(monthtemp === \"3\") {\n                        month = \"March\"\n                    } else if(monthtemp === \"4\") {\n                        month = \"April\"\n                    } else if(monthtemp === \"5\") {\n                        month = \"May\"\n                    } else if(monthtemp === \"6\") {\n                        month = \"June\"\n                    } else if(monthtemp === \"7\") {\n                        month = \"July\"\n                    } else if(monthtemp === \"8\") {\n                        month = \"August\"\n                    } else if(monthtemp === \"9\") {\n                        month = \"September\"\n                    } else if(monthtemp === \"10\") {\n                        month = \"October\"\n                    } else if(monthtemp === \"11\") {\n                        month = \"November\"\n                    } else if(monthtemp === \"12\") {\n                        month = \"December\"\n                    }\n                    sellstemp.push({\n                        Data: [\n                            <h2 className=\"table__data__header\">{month + \" \" + Array.Sells[i].dateTime.toString().split(\".\")[2]}</h2>\n                        ],\n                    })\n                }\n            } else {\n                if(Array.Sells[i].dateTime.toString().split(\" \")[1] !== monthtemp2){\n                    if(Array.Sells[i].dateTime.toString().split(\" \")[1] === \"Jan\"){\n                        monthtemp = \"1\"\n                    } else if(Array.Sells[i].dateTime.toString().split(\" \")[1] === \"Feb\") {\n                        monthtemp = \"2\"\n                    } else if(Array.Sells[i].dateTime.toString().split(\" \")[1] === \"Mar\") {\n                        monthtemp = \"3\"\n                    } else if(Array.Sells[i].dateTime.toString().split(\" \")[1] === \"Apr\") {\n                        monthtemp = \"4\"\n                    } else if(Array.Sells[i].dateTime.toString().split(\" \")[1] === \"May\") {\n                        monthtemp = \"5\"\n                    } else if(Array.Sells[i].dateTime.toString().split(\" \")[1] === \"Jun\") {\n                        monthtemp = \"6\"\n                    } else if(Array.Sells[i].dateTime.toString().split(\" \")[1] === \"Jul\") {\n                        monthtemp = \"7\"\n                    } else if(Array.Sells[i].dateTime.toString().split(\" \")[1] === \"Aug\") {\n                        monthtemp = \"8\"\n                    } else if(Array.Sells[i].dateTime.toString().split(\" \")[1] === \"Sep\") {\n                        monthtemp = \"9\"\n                    } else if(Array.Sells[i].dateTime.toString().split(\" \")[1] === \"Oct\") {\n                        monthtemp = \"10\"\n                    } else if(Array.Sells[i].dateTime.toString().split(\" \")[1] === \"Nov\") {\n                        monthtemp = \"11\"\n                    } else if(Array.Sells[i].dateTime.toString().split(\" \")[1] === \"Dec\") {\n                        monthtemp = \"12\"\n                    }\n                    \n                    monthtemp2 = Array.Sells[i].dateTime.toString().split(\" \")[1]\n                    let month\n                    if(monthtemp === \"1\"){\n                        month = \"January\"\n                    } else if(monthtemp === \"2\") {\n                        month = \"February\"\n                    } else if(monthtemp === \"3\") {\n                        month = \"March\"\n                    } else if(monthtemp === \"4\") {\n                        month = \"April\"\n                    } else if(monthtemp === \"5\") {\n                        month = \"May\"\n                    } else if(monthtemp === \"6\") {\n                        month = \"June\"\n                    } else if(monthtemp === \"7\") {\n                        month = \"July\"\n                    } else if(monthtemp === \"8\") {\n                        month = \"August\"\n                    } else if(monthtemp === \"9\") {\n                        month = \"September\"\n                    } else if(monthtemp === \"10\") {\n                        month = \"October\"\n                    } else if(monthtemp === \"11\") {\n                        month = \"November\"\n                    } else if(monthtemp === \"12\") {\n                        month = \"December\"\n                    }\n                    sellstemp.push({\n                        Data: [\n                            <h2 className=\"table__data__header\">{month + \" \" + Array.Sells[i].dateTime.toString().split(\" \")[3]}</h2>\n                        ],\n                    })\n                }\n            }\n            sellstemp.push({\n                Data: [\n                    Array.Sells[i].From.substring(0,6) + \"...\",\n                    Array.Sells[i].To.substring(0,6) + \"...\",\n                    ConvertInt(Array.Sells[i].Amount),\n                    Array.Sells[i].dateTime,\n                ],\n                Link: \"https://bscscan.com/tx/\" + Array.Sells[i].Hash\n            })\n        }\n        setSells(prev => prev = sellstemp)\n\n        //Preparing data for Transactions Table \n        var transactionstemp = [] \n        monthtemp = \"\"\n        monthtemp2 = \"\" \n        for (let i = Array.Transfers.length - 1; i >= 0; i--) {\n            if(Array.Transfers[i].dateTime.toString().includes(\".\")){\n                if(Array.Transfers[i].dateTime.toString().split(\".\")[1] !== monthtemp){\n                    monthtemp = Array.Transfers[i].dateTime.toString().split(\".\")[1]\n                    let month\n                    if(monthtemp === \"1\"){\n                        month = \"January\"\n                    } else if(monthtemp === \"2\") {\n                        month = \"February\"\n                    } else if(monthtemp === \"3\") {\n                        month = \"March\"\n                    } else if(monthtemp === \"4\") {\n                        month = \"April\"\n                    } else if(monthtemp === \"5\") {\n                        month = \"May\"\n                    } else if(monthtemp === \"6\") {\n                        month = \"June\"\n                    } else if(monthtemp === \"7\") {\n                        month = \"July\"\n                    } else if(monthtemp === \"8\") {\n                        month = \"August\"\n                    } else if(monthtemp === \"9\") {\n                        month = \"September\"\n                    } else if(monthtemp === \"10\") {\n                        month = \"October\"\n                    } else if(monthtemp === \"11\") {\n                        month = \"November\"\n                    } else if(monthtemp === \"12\") {\n                        month = \"December\"\n                    }\n                    transactionstemp.push({\n                        Data: [\n                            <h2 className=\"table__data__header\">{month + \" \" + Array.Transfers[i].dateTime.toString().split(\".\")[2]}</h2>\n                        ],\n                    })\n                }\n            } else {\n                if(Array.Transfers[i].dateTime.toString().split(\" \")[1] !== monthtemp2){\n                    if(Array.Transfers[i].dateTime.toString().split(\" \")[1] === \"Jan\"){\n                        monthtemp = \"1\"\n                    } else if(Array.Transfers[i].dateTime.toString().split(\" \")[1] === \"Feb\") {\n                        monthtemp = \"2\"\n                    } else if(Array.Transfers[i].dateTime.toString().split(\" \")[1] === \"Mar\") {\n                        monthtemp = \"3\"\n                    } else if(Array.Transfers[i].dateTime.toString().split(\" \")[1] === \"Apr\") {\n                        monthtemp = \"4\"\n                    } else if(Array.Transfers[i].dateTime.toString().split(\" \")[1] === \"May\") {\n                        monthtemp = \"5\"\n                    } else if(Array.Transfers[i].dateTime.toString().split(\" \")[1] === \"Jun\") {\n                        monthtemp = \"6\"\n                    } else if(Array.Transfers[i].dateTime.toString().split(\" \")[1] === \"Jul\") {\n                        monthtemp = \"7\"\n                    } else if(Array.Transfers[i].dateTime.toString().split(\" \")[1] === \"Aug\") {\n                        monthtemp = \"8\"\n                    } else if(Array.Transfers[i].dateTime.toString().split(\" \")[1] === \"Sep\") {\n                        monthtemp = \"9\"\n                    } else if(Array.Transfers[i].dateTime.toString().split(\" \")[1] === \"Oct\") {\n                        monthtemp = \"10\"\n                    } else if(Array.Transfers[i].dateTime.toString().split(\" \")[1] === \"Nov\") {\n                        monthtemp = \"11\"\n                    } else if(Array.Transfers[i].dateTime.toString().split(\" \")[1] === \"Dec\") {\n                        monthtemp = \"12\"\n                    }\n                    \n                    monthtemp2 = Array.Transfers[i].dateTime.toString().split(\" \")[1]\n                    let month\n                    if(monthtemp === \"1\"){\n                        month = \"January\"\n                    } else if(monthtemp === \"2\") {\n                        month = \"February\"\n                    } else if(monthtemp === \"3\") {\n                        month = \"March\"\n                    } else if(monthtemp === \"4\") {\n                        month = \"April\"\n                    } else if(monthtemp === \"5\") {\n                        month = \"May\"\n                    } else if(monthtemp === \"6\") {\n                        month = \"June\"\n                    } else if(monthtemp === \"7\") {\n                        month = \"July\"\n                    } else if(monthtemp === \"8\") {\n                        month = \"August\"\n                    } else if(monthtemp === \"9\") {\n                        month = \"September\"\n                    } else if(monthtemp === \"10\") {\n                        month = \"October\"\n                    } else if(monthtemp === \"11\") {\n                        month = \"November\"\n                    } else if(monthtemp === \"12\") {\n                        month = \"December\"\n                    }\n                    transactionstemp.push({\n                        Data: [\n                            <h2 className=\"table__data__header\">{month + \" \" + Array.Transfers[i].dateTime.toString().split(\" \")[3]}</h2>\n                        ],\n                    })\n                }\n            }\n\n            var Style\n            Array.Transfers[i].To === '0x42981d0bfbaf196529376ee702f2a9eb9092fcb5' || Array.Transfers[i].To === '0x0000000000000000000000000000000000000001' || Array.Transfers[i].To === '0xefecd68f9549d47cbeca0a2fd9bd09cf4ec6a5d6' ? Style = \"Passive\" : Array.Transfers[i].From === '0x678ee23173dce625a90ed651e91ca5138149f590' ? Style = \"Positiv\" : Style = \"\"\n            transactionstemp.push({\n                Data: [\n                    Array.Transfers[i].From.substring(0,6) + \"...\",\n                    Array.Transfers[i].To.substring(0,6) + \"...\",\n                    ConvertInt(Array.Transfers[i].Amount),\n                    Array.Transfers[i].dateTime,\n                ],\n                Link: \"https://bscscan.com/tx/\" + Array.Transfers[i].Hash,\n                Style: Style\n            })\n        }\n        setTransfers(prev => prev = transactionstemp)\n        setLoading(prev => prev = false)\n    }\n\n    return (\n        <div>\n            {!Loading && <h2 className=\"u-margin-top-small\">Buys</h2>}\n            {!Loading && Buys.length > 0 &&\n                <Table \n                    TableID=\"Buys\"\n                    Headers={[\"From\", \"To\", \"Quantity\", \"Date\"]}\n                    TableData={Buys}\n                    TableStyle=\"Horizontal\"\n                />\n            }\n            {!Loading && Sells && <h2 className=\"u-margin-top-small\">Sells</h2>} \n            {!Loading && Sells.length > 0 &&\n                <Table \n                    TableID=\"Sells\"\n                    Headers={[\"From\", \"To\", \"Quantity\", \"Date\"]}\n                    TableData={Sells}\n                    TableStyle=\"Horizontal\"\n                />\n            }\n            {!Loading && Transfers && <h2 className=\"u-margin-top-small\">Transfers</h2>}\n            {!Loading && Transfers.length > 0 && \n                <Table \n                    TableID=\"Transfers\"\n                    Headers={[\"From\", \"To\", \"Quantity\", \"Date\"]}\n                    TableData={Transfers}\n                    TableStyle=\"Horizontal\"\n                />\n            }\n            {Loading && <Loader />}\n        </div>\n    )\n}\n\nexport default HolderTransactions","import React, {useState} from 'react'\nimport {useLocation} from 'react-router-dom'\n\nimport Main from './../components/UI/Main/Main'\nimport Grid from './../components/UI/Grid'\nimport HolderSearch from './../components/Form/HoldersSearch'\nimport HolderSupply from './../components/Table/HolderSupply'\nimport HolderCount from './../components/Table/HolderCount'\nimport AllHolders from './../components/Table/AllHolders'\nimport Holder from './../components/Table/Holder'\nimport HolderTransactions from './../components/Table/HolderTransactions'\n\nconst Holders = (props) => {\n    const [HolderTableState, setHolderTableState] = useState(true)\n\n    const location = useLocation();\n    const {pathname} = location;\n    const splitLocation = pathname.split(\"/\");\n\n    const ChangeHolderTableState = () => {\n        setHolderTableState(prev => prev = !prev)\n    }\n\n    const CheckWallet = (Value) => {\n        let temp = false\n        if (\n            //BitMart\n            Value === '0x328130164d0f2b9d7a52edc73b3632e713ff0ec6' ||\n            //WhiteBit\n            Value === '0x33eac50b7faf4b8842a621d0475335693f5d21fe' ||\n            //Gate IO\n            Value === '0x0d0707963952f2fba59dd06f2b425ace40b492fe' ||\n            //HotBit\n            Value === '0xc7029e939075f48fa2d5953381660c7d01570171' ||\n            //MEXC\n            Value === '0x4982085c9e2f89f2ecb8131eca71afad896e89cb' ||\n            //HotBit\n            Value === '0xc7029e939075f48fa2d5953381660c7d01570171' ||\n            //BitTrue\n            Value === '0x868f027a5e3bd1cd29606a6681c3ddb7d3dd9b67' ||\n            //Mandala\n            Value === '0x8894e0a0c962cb723c1976a4421c95949be2d4e3' ||\n            //BIKI\n            Value === '0x3fdf750fb555583374b26a5ff476abbd7f6e6fb5' ||\n            //BIKI\n            Value === '0x87067ddcfddf4c6790207132848cfbbe5cd6f939' ||\n            //LBank\n            Value === '0x124d9bf2fecbc16b54ec4accdb14d44c2144f012' ||\n            //ZGB\n            Value === '0x8af8f4df5c463db7ab24ec66cee7546c9a310f56' ||\n            //BitForex\n            Value === '0x3a723e58c4808dde4591543282adc7d6b378715b' ||\n            //Decoin\n            Value === '0x2c6cc8e98adc0b3f3505c29d63fcdd76ac0e2ba4' ||\n            //Quidax\n            Value === '0x7d7fc48fc930552957dc585726d9628f5319c038' ||\n            //LP Providers\n            Value === '0x8c128dba2cb66399341aa877315be1054be75da8' ||\n            //LP Providers\n            Value === '0xff3dd404afba451328de089424c74685bf0a43c9' ||\n            //LP Providers\n            Value === '0x79c4af7c43f500b9ccba9396d079cc03dfcafda1' ||\n            //LP Providers\n            Value === '0x9eca52d3b9ec0cc2f2d62c0dba155952ae6d57d2' ||\n            //LP Providers\n            Value === '0x391c9d82af4edd7d3ec23cefabf9a35b630b3a7a' ||\n            //LP Providers\n            Value === '0xd11616e66b128c0b756b91cc13466defaae67d07' ||\n            //Swap LP\n            Value === '0x856a1c95bef293de7367b908df2b63ba30fbdd59' ||\n            //Swap LP\n            Value === '0xe804f3c3e6dda8159055428848fe6f2a91c2b9af' ||\n            // Swap LP\n            Value === '0xa8736b9585a01d6dcc1b6e2fc9dc208552c34b58' ||\n            // Swap LP\n            Value === '0x8fb9bbfd97fff7bba69c0162a9632c9503b29cd4' ||\n            //Pancake Swap\n            Value === '0x9adc6fb78cefa07e13e9294f150c1e8c1dd566c0' ||\n            //Pancake Swap\n            Value === '0x87d7fd8c446cb5d3da3ca23f429e7b7504d1931c' ||\n            //Pancake Swap\n            Value === '0xe2f99ab0a62b72773b6eac227f9b9c161494e8a9' ||\n            //Pancake Swap\n            Value === '0x29e99847a4f968372cf573a7965e2ad954cb0cbc' ||\n            //Pancake Swap\n            Value === '0xef967e3da982ecc1c84bbe6053fd61af2a65bb9a' ||\n            //?\n            Value === '0x2ad2c5314028897aecfcf37fd923c079beeb2c56' ||\n            Value === '0x678ee23173dce625a90ed651e91ca5138149f590'\n        ) {\n            temp = true\n        }\n        return temp\n    }\n\n    return(\n        <Main>\n            {!splitLocation[2] && \n                <Grid GridBox=\"full\">\n                    <div className=\"flex flex-column align-center\">\n                        <h2 className=\"clickable border-radius padding\" onClick={ChangeHolderTableState}>{HolderTableState ? \"Holder Distribution\" : \"Supply Distribution\"}</h2>\n                        <h4>\n                            (Holders only)\n                        </h4>\n                        {HolderTableState && <HolderCount/>}\n                        {!HolderTableState && <HolderSupply/>}\n                        <HolderSearch />\n\n                    </div>\n                    <div>\n                        <AllHolders page='1'/>\n                    </div>\n                </Grid>\n            }\n            {splitLocation[2] && \n                <Grid GridBox=\"full\">\n                    <div className=\"flex flex-column align-center\">\n                        <Holder/> \n                    </div>\n                    {!CheckWallet(splitLocation[2]) ? <div className=\"flex flex-standard-wrap align-center\">\n                        <HolderTransactions />\n                    </div> : <div className=\"flex flex-column align-center\"><h2>Too Many Transactions</h2></div>}\n                </Grid>\n            }\n        </Main>\n    )\n}\n\nexport default Holders","import React, {useEffect, useCallback} from 'react'\nimport ReactDOM from 'react-dom';\nimport downloadjs from 'downloadjs';\nimport html2canvas from 'html2canvas';\n\nconst TableLink = (props) => {\n    useEffect(() => {\n        console.log(props)\n        if(props.TableStyle === \"Horizontal\"){\n            setTableDataLink(props.TableID)\n        } else if (props.TableStyle === \"Vertical\"){\n            setTableDataVerticalLink(props.TableID)\n        }\n    }, [props.TableID, props.TableStyle, props.TableData, props.TableDataVertical])\n\n    const handleCaptureClick = useCallback(async () => {\n        const canvas = await html2canvas(document.getElementById(props.TableID));\n        const dataURL = canvas.toDataURL('image/png');\n        downloadjs(dataURL, props.TableID + '-' + new Date().getTime().toString() + '.png', 'image/png');\n    }, []);\n\n    const setTableDataLink = (ID) => {\n        var Header = (<thead><tr>{props.Headers.map((Header, i) => <th key={i} className=\"clickable\" onClick={handleCaptureClick}>{Header}</th>)}</tr></thead>)\n\n\n        var DataRows = (<tbody>{props.TableData.map((Data, i) => <tr key={i} className={Data.Style}>{Data.Data.map((data, x) => <td key={x} colSpan={Data.Data.length < props.Headers.length ? parseInt(props.Headers.length / Data.Data.length) : \"\"}><a href={Data.Link} target={Data.NewPage && \"_blank\"} rel=\"noreferrer\">{data}</a></td>)}</tr>)}</tbody>)\n\n        ReactDOM.render(\n            [Header, DataRows],\n            document.getElementById(ID)\n        )\n    }\n\n    const setTableDataVerticalLink = (ID) => {\n        var DataRows = (<tbody>{props.TableData.map((Data, i) => <tr key={i} >{Data.Data.map((data, x) => <td key={x} colSpan={Data.Data.length < props.Headers.length ? parseInt(props.Headers.length / Data.Data.length) : \"\"}><a href={Data.Link} target={Data.NewPage && \"_blank\"} rel=\"noreferrer\">{data}</a></td>)}</tr>)}</tbody>)\n\n        ReactDOM.render(\n            [DataRows],\n            document.getElementById(ID)\n        )\n    }\n\n    return (\n        <div className=\"border-radius overflow-hidden shadow\">\n            <table className=\"NewTable\" id={props.TableID}>\n            </table>\n        </div>\n    )\n}\n\nexport default TableLink\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["props","useState","isBusy","setBusy","Data","setData","page","setPage","useEffect","Axios","then","response","temp","Holder","Balance","ConvertInt","Style","Address","findWalletName","push","num_row","Link","NewPage","address","name","SafemoonV2Settings","includes","className","Loader","TableID","Headers","TableData","TableStyle","onClick","newPage","parseInt","toString","type","id","min","value","step","onChange","document","querySelector","required","splitLocation","useLocation","pathname","split","Position","console","log","replace","TotalHolders","prev","href","rel","target","length","Table","Loading","setLoading","Buys","setBuys","Sells","setSells","Transfers","setTransfers","Arr","Safemoon","V1","arr","SafemoonV2","V2","ArrangeData","catch","err","TransactionCategorization","Value","Direction","Type","JSON","parse","To","toLowerCase","From","State","Transactions","complete","Transaction","Amount","date","Date","timeStamp","toLocaleDateString","Hash","hash","dateTime","from","to","Categorization","stringify","Promise","resolve","Array","buystemp","monthtemp","monthtemp2","i","month","substring","sellstemp","transactionstemp","HolderTableState","setHolderTableState","Main","Grid","GridBox","HolderCount","HolderSupply","CheckWallet","setTableDataLink","setTableDataVerticalLink","TableDataVertical","handleCaptureClick","useCallback","html2canvas","getElementById","canvas","dataURL","toDataURL","downloadjs","getTime","ID","Header","map","DataRows","data","x","colSpan","ReactDOM","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","call","next","_e2"],"sourceRoot":""}